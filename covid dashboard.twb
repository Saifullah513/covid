<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0525.0851                               -->
<workbook original-version='18.1' source-build='2022.1.2 (20221.22.0525.0851)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (tableau table 1)' inline='true' name='federated.0cpg2w61gdw1qz15k8r3607fwyk5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 1' name='excel-direct.1wp07lq1l8xarp11u0mng0dyh99k'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/saifu/Desktop/tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1wp07lq1l8xarp11u0mng0dyh99k' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='Death_percent' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1wp07lq1l8xarp11u0mng0dyh99k' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='Death_percent' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7224BAD990BE462EA4F12A72BF3A522D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7224BAD990BE462EA4F12A72BF3A522D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death_percent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Death_percent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7224BAD990BE462EA4F12A72BF3A522D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death percent' datatype='real' name='[Death_percent]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7224BAD990BE462EA4F12A72BF3A522D]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7224BAD990BE462EA4F12A72BF3A522D'>
            <properties context=''>
              <relation connection='excel-direct.1wp07lq1l8xarp11u0mng0dyh99k' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='Death_percent' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 2)' inline='true' name='federated.09tr1av1dq257i110kg5g1qjees6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 2' name='excel-direct.0a9krtn18yt1zh128dxgi1icw33j'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/saifu/Desktop/tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0a9krtn18yt1zh128dxgi1icw33j' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0a9krtn18yt1zh128dxgi1icw33j' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D162409A50F84028AE0595CFB16393A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D162409A50F84028AE0595CFB16393A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D162409A50F84028AE0595CFB16393A1]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D162409A50F84028AE0595CFB16393A1'>
            <properties context=''>
              <relation connection='excel-direct.0a9krtn18yt1zh128dxgi1icw33j' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 3)' inline='true' name='federated.1q2hwrt0no0nvu199o9ay0ppqsr2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 3' name='excel-direct.05fskpi077g0qj15hvxrc17duwmu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/saifu/Desktop/tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.05fskpi077g0qj15hvxrc17duwmu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D232:no:A1:D232:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='infected_percent' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.05fskpi077g0qj15hvxrc17duwmu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D232:no:A1:D232:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='infected_percent' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D232:no:A1:D232:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5EE652B0B5EA42F28737A93AAAC4F5EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5EE652B0B5EA42F28737A93AAAC4F5EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5EE652B0B5EA42F28737A93AAAC4F5EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infected_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infected_percent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>infected_percent</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5EE652B0B5EA42F28737A93AAAC4F5EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_5EE652B0B5EA42F28737A93AAAC4F5EF]' role='measure' type='quantitative' />
      <column caption='Infected Percent' datatype='real' name='[infected_percent]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_5EE652B0B5EA42F28737A93AAAC4F5EF'>
            <properties context=''>
              <relation connection='excel-direct.05fskpi077g0qj15hvxrc17duwmu' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D232:no:A1:D232:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='infected_percent' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 4)' inline='true' name='federated.07zjde219usybj1fzj85d0gqrqph' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 4' name='excel-direct.1g1kk7p1591xi11ga3evp0ny88zq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/saifu/Desktop/tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1g1kk7p1591xi11ga3evp0ny88zq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='infected_percent' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1g1kk7p1591xi11ga3evp0ny88zq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='infected_percent' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26B1046004BB4B4980047872A62DCB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26B1046004BB4B4980047872A62DCB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26B1046004BB4B4980047872A62DCB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26B1046004BB4B4980047872A62DCB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infected_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infected_percent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>infected_percent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26B1046004BB4B4980047872A62DCB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_26B1046004BB4B4980047872A62DCB7F]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Infected Percent' datatype='real' name='[infected_percent]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#3ca8bc'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_26B1046004BB4B4980047872A62DCB7F'>
            <properties context=''>
              <relation connection='excel-direct.1g1kk7p1591xi11ga3evp0ny88zq' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='infected_percent' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 1)' name='federated.0cpg2w61gdw1qz15k8r3607fwyk5' />
          </datasources>
          <datasource-dependencies datasource='federated.0cpg2w61gdw1qz15k8r3607fwyk5'>
            <column caption='Death percent' datatype='real' name='[Death_percent]' role='measure' type='quantitative' />
            <column-instance column='[Death_percent]' derivation='Sum' name='[sum:Death_percent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cpg2w61gdw1qz15k8r3607fwyk5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cpg2w61gdw1qz15k8r3607fwyk5].[sum:Death_percent:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cpg2w61gdw1qz15k8r3607fwyk5].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cpg2w61gdw1qz15k8r3607fwyk5].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cpg2w61gdw1qz15k8r3607fwyk5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cpg2w61gdw1qz15k8r3607fwyk5].[:Measure Names]' value='153' />
            <format attr='height' value='34' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0cpg2w61gdw1qz15k8r3607fwyk5].[sum:Death_percent:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00aaff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0cpg2w61gdw1qz15k8r3607fwyk5].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9450275897979736' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0cpg2w61gdw1qz15k8r3607fwyk5].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E814B44F-9382-454D-9089-7F2C1D80D953}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 2)' name='federated.09tr1av1dq257i110kg5g1qjees6' />
          </datasources>
          <datasource-dependencies datasource='federated.09tr1av1dq257i110kg5g1qjees6'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09tr1av1dq257i110kg5g1qjees6].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09tr1av1dq257i110kg5g1qjees6].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.09tr1av1dq257i110kg5g1qjees6].[none:location:nk]' value='134' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09tr1av1dq257i110kg5g1qjees6].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09tr1av1dq257i110kg5g1qjees6].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.09tr1av1dq257i110kg5g1qjees6].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{D0371807-53AB-4129-A49C-8CC141DCD776}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>percent population infected per country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 3)' name='federated.1q2hwrt0no0nvu199o9ay0ppqsr2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1q2hwrt0no0nvu199o9ay0ppqsr2'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Infected Percent' datatype='real' name='[infected_percent]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[infected_percent]' derivation='Sum' name='[sum:infected_percent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[sum:infected_percent:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[sum:infected_percent:qk]' value='Infected Percent'>
              <formatted-text>
                <run>Infected Percent</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[none:Location:nk]' />
              <color column='[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[sum:infected_percent:qk]' />
              <geometry column='[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[Latitude (generated)]</rows>
        <cols>[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{030B87CD-2642-4DD6-8DBA-DC6DB138337D}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>percent population infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 4)' name='federated.07zjde219usybj1fzj85d0gqrqph' />
          </datasources>
          <datasource-dependencies datasource='federated.07zjde219usybj1fzj85d0gqrqph'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[infected_percent]' derivation='Avg' name='[avg:infected_percent:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[infected_percent]' derivation='Avg' forecast-column-base='[avg:infected_percent:qk]' forecast-column-type='forecast-value' name='[fVal:avg:infected_percent:qk]' pivot='key' type='quantitative' />
            <column caption='Infected Percent' datatype='real' name='[infected_percent]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07zjde219usybj1fzj85d0gqrqph].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07zjde219usybj1fzj85d0gqrqph].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07zjde219usybj1fzj85d0gqrqph].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.07zjde219usybj1fzj85d0gqrqph].[tmn:date:qk]' value='299' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07zjde219usybj1fzj85d0gqrqph].[none:Location:nk]' />
              <color column='[federated.07zjde219usybj1fzj85d0gqrqph].[none:Forecast Indicator:nk]' />
              <text column='[federated.07zjde219usybj1fzj85d0gqrqph].[none:Location:nk]' />
              <text column='[federated.07zjde219usybj1fzj85d0gqrqph].[fVal:avg:infected_percent:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07zjde219usybj1fzj85d0gqrqph].[fVal:avg:infected_percent:qk]</rows>
        <cols>[federated.07zjde219usybj1fzj85d0gqrqph].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{AF8408A4-EB13-48DA-92BC-707377678BE4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='12573' id='3' name='Sheet 1' w='28352' x='369' y='1528' />
        <zone h='28202' id='4' name='Sheet 2' w='43911' x='123' y='15629' />
        <zone h='17391' id='5' name='Sheet 2' pane-specification-id='0' param='[federated.09tr1av1dq257i110kg5g1qjees6].[none:location:nk]' type-v2='color' w='8610' x='43788' y='26439' />
        <zone h='47944' id='6' name='Sheet 3' w='47540' x='52460' y='4465' />
        <zone h='10341' id='7' name='Sheet 3' pane-specification-id='0' param='[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[sum:infected_percent:qk]' type-v2='color' w='8610' x='84625' y='470' />
        <zone h='39130' id='8' name='Sheet 4' w='65560' x='1722' y='52644' />
        <zone h='27262' id='9' name='Sheet 4' pane-specification-id='0' param='[federated.07zjde219usybj1fzj85d0gqrqph].[none:Location:nk]&#10;[federated.07zjde219usybj1fzj85d0gqrqph].[none:Forecast Indicator:nk]' type-v2='color' w='13038' x='68020' y='55229' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='12' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='101' h='12573' id='3' is-fixed='true' name='Sheet 1' w='28352' x='369' y='1528'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47944' id='6' is-fixed='true' name='Sheet 3' w='47540' x='52460' y='4465'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10341' id='7' name='Sheet 3' pane-specification-id='0' param='[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[sum:infected_percent:qk]' type-v2='color' w='8610' x='84625' y='470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='28202' id='4' is-fixed='true' name='Sheet 2' w='43911' x='123' y='15629'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17391' id='5' name='Sheet 2' pane-specification-id='0' param='[federated.09tr1av1dq257i110kg5g1qjees6].[none:location:nk]' type-v2='color' w='8610' x='43788' y='26439'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39130' id='8' is-fixed='true' name='Sheet 4' w='65560' x='1722' y='52644'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='27262' id='9' name='Sheet 4' pane-specification-id='0' param='[federated.07zjde219usybj1fzj85d0gqrqph].[none:Location:nk]&#10;[federated.07zjde219usybj1fzj85d0gqrqph].[none:Forecast Indicator:nk]' type-v2='color' w='13038' x='68020' y='55229'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F5C251E2-EC95-4122-B90B-0D6F52C487E7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cpg2w61gdw1qz15k8r3607fwyk5].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B318506E-75C8-4FDB-BA5D-769BF47E9B61}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09tr1av1dq257i110kg5g1qjees6].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09tr1av1dq257i110kg5g1qjees6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{133B0C3D-E3C2-4548-922E-2B7F33DB940C}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[sum:infected_percent:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1q2hwrt0no0nvu199o9ay0ppqsr2].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E3913A8-9D9B-4EA1-81DE-49F1865EE211}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07zjde219usybj1fzj85d0gqrqph].[none:Location:nk]&#10;[federated.07zjde219usybj1fzj85d0gqrqph].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07zjde219usybj1fzj85d0gqrqph].[none:Forecast Indicator:nk]</field>
            <field>[federated.07zjde219usybj1fzj85d0gqrqph].[none:Location:nk]</field>
            <field>[federated.07zjde219usybj1fzj85d0gqrqph].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C64D934D-1158-44E8-9AE5-E5CE18C0C3C0}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09tr1av1dq257i110kg5g1qjees6].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07zjde219usybj1fzj85d0gqrqph].[none:Forecast Indicator:nk]</field>
              <field>[federated.07zjde219usybj1fzj85d0gqrqph].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{EA7880BC-04D3-4B21-9563-980C4D37BFC8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2915Md2Z3n90l3va+65X2hDLxrixabPdSQXA6Hs0NuxIQmdmeHklah0Ep6
      0x/ACD3oYZ/3QaEYE7OKiZE2VuRwhmbIYRuiDRtoNFyhvK9b5nrv8mbm0cMtmEIVGtVAAQV0
      5QdxcbPyZp7zO5nnm8fm70hCCIGNzRFFPmwDbGwOE1sANkcaWwA2RxpbADZHGlsANkeaewIQ
      QmAYDQzDRADZZBLjoYONWolssfrIwJLJ5P1jDYO7HUyWZe3PGqNOMlvYt/E2Nk+LDM3Mf/3T
      j7hx8zY3b3xOtlhj4spVKg8dXEmucHsp8cjArl69cm/7L//jf+Dz6VUAfvnLX+zPmmqaK7cX
      v1wKbGyeAhUAq8p6usYffucSeqOBpjmavwrBrWu/o2YpSA4vYy2CxbkplNwincOn8UsVljfi
      FCsNfu/tSzsC7h45Q3zhNo2xPgC25q+TcQ4wGjb4fCGHmVtBC7SytR6ju7ubZKbA7782Qmx5
      jk/VIt5oPx0ei+nVLXTd5J23L3H5Nz9naTnB2+9cYjWeJRwKc/bk2HO9YDZfLZolgFlByG70
      Wokbl3/JRxMxAIRRZz1d5rXXXiO3sUIDiaGR41x66xLTN28AAmHB6vQsuytGEq+dPcaVGzMA
      6JUi5ZqBMBvki2UqVZ1TZ87hUmVOnDmPpJcxBPQMjPD6pa+xMnObjz7+BIemkVuZZDmrMzE5
      w5/+8M+xSjkMJAb6+57flbL5SiIDSFoEq5ZAcfoYGxkAqfmjJCuYRgPLsmgIgUKzulQr5VA9
      Pj757CavvHKRlqB3z8Bbe8cob81RNSxkVUVYFvVaDesLxp6FEJj1MqhOvF4f46fO8kf/zZ/R
      G3AweGwMpyrTM3aGr796ll/9/GeYB3xBbI4Wyo9+9KMfSZJEf087N29NkNcVTo0O4XY6CLS0
      EvU5mJpZ4Njx04QCPlLxTVLZMq+/doGwV2N2YZVgpJXOrg4cikI4HGkGrChEwhHaWwJUTSfj
      J06ytTRNtQHtHZ20RgKEQmFUVSEUDqMpCqFwhHwmxVY8yatvvMHwYC8TN2+SzOaJtrfj1Jrh
      l/Jppmbn6ewdpKM1csiX0OZlRrLnAtkcZexxAJsjjS0AmyONCjBdgNnSYZti87ScD0Gv57Ct
      eLlQAf52Ff73qS9xlrCQ6xWEw4OQ9y5EJLOBULSDsPGpkIw6sqFjqS6Euoc9ZgNkDbCQGzUs
      zQ2S9GyMEQJZLyEhYzr37jlrXjcVWa8gZA2hOvYO667dD5j616/Cnw8cvNlfZdQnOUmurhGd
      vI3l0sgMXcBVLFD3enEW81DbwEELWm6aUtcFKu3HcCVnkHFS9/pwFXLoXh9Ko4EQdYQjjFpc
      Rw/34chvYjp8hOY/IHPqX9Lw+J86gbJepP3GT0md/iO0whaGUxBYj5MfGEer1VFy01QHv4sr
      dhmcUerBVhy5ONVoP+7UGpXWPtypVWotPbjT65Q7jyPkJxWIwLfwczTtOIXOKFq1jpa4jtV6
      gYZURjij+Neukjr1L2i9+RManiCV/q+h5leoRYdxx2fR/RHC85/RcCgYLSNUWnpwpdcod57A
      rtF+eZ5IAAB6eBCpukzr1K8wnAHUWheu+C2qLSPokR7UwhKu5Cy19mP4N2dpaAqBpSwNTwjP
      ZolK1zncmSTFcBp/IkOttInDCiGMJQxP5EAyP4DpaUUPdGBZKUyvC9/GLA3/AI7CJr7YHfRQ
      FABHpUR68Os4U1O4ErdxVnJIRgNnagpUN45qFqXRoNo+iik/4WWTZOrhHixHH8Hlj9A1UC0n
      xUgPnuUPcBWmMZyupt3uCKW2DqK3f4we6EbVqyjVNM5yHsPbhiVymKJMaOUGGAa16CjwiNLC
      5pE80Z0Uihu5Mk0jPEBdlFBwgVFBD/ZQD/fiKmxQD/diAQJQqikanjGKXVEUy4FAp9p6DLW4
      hay003BVqLX0YukyNDQwK2iVEg2P70ASqQc6sNyduFeuU+46hzuxiCxJ6KEedH8YS4Zi5wjB
      5atYChi+DsxAB0p+DTMwjKLr1IPtOFMLyKaJqT7xcwPLFcFQNWrBNrRqnVJnC87UMpJlUg91
      Y2rNapolC7z5Cqnj7+BNrtPw+JANnYY3ilLawnS00/C0ICsmcjGGbBjYAvjySEII8VczVf5m
      7tGzPJ8Wd2aFaqT/S59Xr9dxOp3PwKKn40W163876eS7g3u3LWz2RgV4x7HFkH/12cXiB7j9
      pU/76//y1/zwhz88aGuemhfVrg69A7AnB34Z7FaTzZHmySuzT0GlmGVqcZ2LZ08BUC3mmFiI
      8eq5UyzNTpEpVBg7fe5LhCi4c+sahnBx/NRx5u7cxhWM0hFyMrMYo39ohJaAm7npSXKFPC2d
      QxTSGzh8EXpbvMytrNPS3k1/VxvFbIqFlRi+UCsuaiQyBfoHh1hfXSabK/Dqm289ZeoFseUF
      0nmdk2dPoArB7PQEhXKDU+fOY5WTzK7mGe4OMLO4Rt/QGG0RP+l4jOW1LXqHxygl18iVdI6f
      HGfi+k08kSgnR4ee0q6jyaGUAIrmxvGA9GTNhao1uxZ7+geJ+hXSxdr+AxSCzfUkwXCY7Mo0
      eUPF5XIyNTOPy+nAqakgyYwcP4nH4USzirgiPZTiWyytxugbPsbGenMKuNsfYmxkmGwyxfpW
      mqGuCJu5KqdPn8bj9eLWlKdKuxAWi0tLuLwuMJtvyo2Mn8JNhXylzuzSOmalzNzCKhcunmdt
      aRaA9fUEx44NsTg/RTJdpD2gsbG+RbJQJBIOYU/oejIORQBOl+ve+E29Xt/x983rnxHoHqO/
      df+NOYHgza+/g7MeZ6NoEO3oJba6gCQpjIwMM33nDvV6nVohheGK0NN3jLDDoGZa1M0GbocG
      hkm9Xie3tcrsapJXXjmHiYnT7UIvVVmbn6JnePxAxshc3iBdngbTm3nqegNdbxAJB5mfuEWp
      ZrC4vIgpoNHQQVap1+uMnzhOLptBkRVMScPldqKbMt945x3ii/Po+3zr1GYnh1IFSmyuUS6V
      WY7F0dBxKBK1UonltU0cTo3l+RmGRk98iRAl4uvL1ESQs2cGWZydpqNrgM6wh6nJaY6NHmNq
      ep6B7ijjo4MIYZDNZBg9eYKgS2JuZoah0WNM3pmiKxrCrOVYXFlnpL+X2ZUk42PjlPIZouGn
      72GRJIXBvi5WMhXaghm2sqBnN6gLjdffOIUqC5KDgwQDTqanZhkdPcbk9CzH+jsplOucPn2W
      9OYKG1mdY8NdLM1NE+ruxWm35p4ISQghlpaWWF19hr1AT8hf//WL2dvyotrV0dHB2JjdC/Rl
      UAEkSUJ6VvNfngKv12vbZfNMkYQQwjAMDONhJyg2LxuKoqBphz8B8WXCfiPM5khjN51sjjS2
      AGyONLYAbI40tgBsjjS2AGyONHK9WmZ9fb352Xq049uHycTXKdeb4++NeoX19XXS2fyXmpOS
      2tqg2ni0bzdhNthYX2dzM475Re7k7h4vBJlUgmy+uG8bLLNBqfzs3oWwebGRkSRkCX7961+j
      7PGC+3vvvrvnibH5SbLV5tjByq1Pmd3Mk1xf4r0Prz4myirvvftJ87y5SQq1xiOP1DMrvH9t
      FlMv84tfvfvF4hKCqx++TyJXJpNKPdZl4rvvNdNlNqqk0l/OJfuVD9+nXLedMn4VUJ0uDx0d
      ToKBIB1trcRXZphcTSPqZc5ceIWpqSkCoTBjx8eZu3ObcrlI++CZh4KRiETbGO9vZfVnP6VU
      KXHlkytoiqB79Bwes0AsniKTr3LuRBdTU5NEu6IIq8HE7ZvcysU5+eY3mf/8t7gDLXT3D9HV
      1nR5GAhF6Okf4satSZJr80yuJKkVC7zzrW/ym5/+Z+LpAv/q3/wP+LUGiUKd1742CEA1n+Dy
      1Qm8DonukbPMXLtMW1cva7EN3nrrdaampghH2hgb7CQW3yIfmyBHED23xYk3v0Fi7jq6UGmg
      MeA3ub6pE5KKtA6eZmZmGl3xcvzkSVoCth+Sl5ldj/zPJ+Z552uXuPTKCLemNxgYHODihfO4
      ZItqvYGiCOYXVx4ZoCIJ1mYnSNUEbreT6akZqtUKlpBYX14m1NnFwMAQp8aPIckap06f5fSx
      DrZSJSzTQNGcBPz33wVeWZjh6pVPOX72Ileufo7X5UDVM8xvFNlI5Piz//bfEXQBwsQS96cn
      3Pn8GmfefIdLl95g6vYNTEnj/IULtLhlFH+UwYEBzp89hYJJrV6nYZiMnz7LyYF2ErksN2/O
      oKoqq4sL1BsNBsdOcuHUKPF0gYH+Ac6ev2Bn/q8AuwQQ9mpsZctsrG4Q7WxDkUA3TBJLkyiR
      AQa62x8ZWCmXpKb46YhGiIRbOXfhVd68eIrbU/OcO3uqOe0YDUvomHusGnPy/GuMDXXx/geX
      7+3rHx7j1ddeZ7ivk5ZQgI6BUS594zsMRj109/ahKc1MLykuHKJGrlyjVCjQ2t7CemyTfGoL
      T7BlV1xCCEzzUXOIVUItYU6fPce3v/kNHn4DwOlQqdT1/a98Y/PCIokmxGIxent7EWaDqalJ
      VE+YkaE+asUsU/OrnDh5nPmpO3hDEVxuHy5Jxxlsx+OQKaY3uTMfw+cPMjZ6DE2RWFuaJ1Ws
      MnxslEYxRSyZx+/10j80QHx1kYIu0xZw4Q5HoZqjKnmp5zbZTOUZHh0n6HVh1opsFQy628JA
      s1E8eecOaB5GR4+R2Nqiu7vrXmIMvcb09DSqJ8TYcD/L89OUGwrHx0eIb27Q1d1NcnODYHsX
      5dQGa4kix8f6SWfLaOh4w+1YlSw1xYvDKDG7uEJrRy8Rt4ThDOKTddJlkxa/xsTENEPjJwl4
      XryX4232jz0XyOZIY48D2BxpbAHYHGlsAdgcaWwBHAJCWGzE1qg/YhTc0KvY/UvPB7sRfAh8
      /vF7+HvGiPoczM0tMDQ0wOLqBuGQj/ffvcx3fv91qrgo5fP09g+yND9Pb08Xa5sJQkEv77/7
      MX/yr//U7oE6AOwS4BBI5SoM9HQxd/0zeo6P89Gv/4Gs7mBmbpGuri6CbomZyWl8Lou//8nf
      s5WrsDB5kxpOZhZX6erqsTP/AWGXAIdAORvnxvQSfd3tLK+s0dfTRU32YZRz6OUcXd0dpLJl
      OqIBErkaiXiSgc4WLHeISrFALZ9k5PQrBDy2N+in5ZkJwLIs5EesHmNj86LwzHKoXbDYvAzs
      8gyXSiVpiYTJ5opEIuEDiaT2//2Exs2JAwkLwP3Df4M6OHBg4dkcXXYIoFZI8ZOf/Jjenl6O
      n3uDg1qD3Zidp/HxJwcUGri+/0cHFpbN0WZHFcgVaOXCqTEM03pmCyXa2LxI7GoDZLM53G43
      qmI3YG2++uzK5dFoK5VymcYj58rb2Hx12CWAzp4Bxkb6yGZyexwuKJXuLymf3FpnK5mhkMtj
      CSjmcxim3ftjc7iUCxlW1+OPfIc8m83e297VC5RPb3F9OsYf/OF3d52oV8vcnpzmzddeAavB
      /MIKY6fOsLZwh+jQKZZvX+PYha8T8R7KsgM2NkCDd9//hLe//jWWZicpNlRccoN8oYJZWKMU
      PIG3kSEc8lEsG7sFsJnKcfZ4PwuLMc4eH9jxm8PtozXcXMBaSCoXX7nIzNwcgXCUzPo8Ln+z
      29Q0TSzLujcWcNBjApZlPtqbdT59cBHJMvgPpivY5nlRQ1bcBIMBPvpoBVUSVC1Bp1NCuIIM
      DAwyd3WRbDaLX5J2CqBSKtEebWVlNcbYxeFdQVdLeUqlMolUFrdTIbG1QSDUQsDrQlUUvAEf
      Dk1G2W5AK0rzbdqD9qUvywrqHotVC9OAT391cBF5/Ejv/PGeP91azvLh5P79KD2ON8ejnB86
      qI7no4yfY/0Rbk/NM9TXSbGh0udW8argCodZji0zNNxcUNDJQ1WgmakJjp9/jb6eTqZW4/RF
      /TuCdvuCnD9/4X5U/sC97XD4aD0pLSEw9uGsa9/hHWBYR52xU49eYTTastOpww4BnDp1knf/
      +Z9AdfHO773zTIyzsXnW/MU/XGVhPQPAcHeE//57r2JZDRKpLO3RKPNzswyPjGI2ajsFoLn9
      fPtffOdQjLbZG1OvM//uTw4sPKc/xMBb3z6w8F5EZldT3JjbBMDY7s6fvv05V2Zj/NevHuf9
      T2+SLxXwuF27G8GXf/NzCjXBmVcu0dt+tKo1LyriAP0PHWRYLxMTc0uolTKW08HxkyeIbW5w
      6dzQTgGsL82wFs8TDAYeFY6NzQvPQGeYhmHe2xZCcP78Bfq7u1jeWKeno53OSAiv37tTANH2
      DhQFWsI+MpmcXQLYvJT8Tz94Y9e+keFRAEaHdi4ju0MAqsPN+XPn0Jweurq6vzgWYTFz+3O8
      neMk5m8weOY1Zq99wMjF37MHwmwOlelYnkKl6XU84NEY7wk+8tgdOVVWHayvzLO0vMCpS9/n
      tVP9j45Fkunp7SZnQKStnVRsAae3GdGhDYRZ5i4/nk+DQGA+YsDtoP2CWsLaM02WebBu2IUQ
      X/klce+s5ljPNNd86GnxMN4TZG3xDj//+Cb/3Z98nztTc0QiAbyByO5G8ODAIEJx0dOx26Hs
      gwjLZDOeRlfqdEWjVEsF2jraD3kg7ECjQULaM56mDQc7W1aW5D3jMq2DTZQkPTpNXxX2ym9X
      rt9GqpaYmZtlYWWFbNZHuL26WwDr8SSqpLO1uUFX6+ijI5EVjo2fuvd3KBQ6IPNtbA4WIQQ9
      /YN88xv93JhcIODSUDWNhv6QAIRlUMulmFiv8O/f+YPDstfG5qn4wZt9u/a9/srrALz9VseO
      /TsEMHH9Kif/q+9wprzJ9EKM0yO9z9BMG5tngzG/gCg2p+1Lfh/qsd3z2u6ycyRYlfn4vV+B
      sBg/9/qztdLG5hlR+T//AuPGTQDUc2cI/If/gw/e/Sd8oSinz51D224jCCF2CmD87OuMn33+
      BtvYPGvyuRz+UBs//6ffcKovws3ZdSS3e6cA1hbucPXmDAAXL71Df8fO6blCiHsOryRJwjJN
      hCQhAZIkI4SFJEkH3utjY/O0SJKEQKBKBp/fvI3D387rb761UwC9wyfJF4rMzC1iWLszcS6+
      TiyVI9jSQV9HiM8/u0ZH3xCJ5RkGTr/K7OcfMHrxG/ZAmM2h4vmf/0dEqQyA5PMC8L3v/8me
      x+7KqabsQJNNSvk8dO2cClGo6Bw/McbqyhaCCO0dbSSTcSLtHaQ3lnB67IGwJ8UeCDs4lN4e
      uPf8/uLayA4BWKaJoqh8/RvfIp6t7zq4LRpi6s4Mnb19FIsl6vU6Ho8Pt9eDmU3R1duLpkj3
      BsDsgbD9Yw+EHRzi019Deqv5R0sHvP5NPrr8Aa+8cYmVpWVGR0fuHbvjSjSqBRYXFkmm87z2
      xpu7Anb7I5w+fb9dEAjcnzXa3t520OmwsTkwCrkEH/3ud1QKGWbnZgiEIqSSmzvdojh9Ydoi
      Pky9wvpm8rBstbE5cDy+MKJeolTK4/QFKRbTBCLtO0sAwzDwenyUank8HnsV9KPGRqpALJE/
      sPD6O8K0R3wHFt6+6R2B1u31o93NRvD5i6/idjrIl+tUChkCkXNI0kNVoM+v/BZUH4FgGKfj
      i5uTQghWFudRPUHMcp7OwWNsLM/S1juCx2G7VXwZuXxjmb/8x88OLLx//6/e4F9+7cSBhbdf
      pK6BXfsCgWYHTavTDZH789Z2CMAbiNDb13QZ4XK7vjASS6+A00e9UsTSq8QTSZLxLQIdw7YA
      bA6Vj3/8N6RiSwC09gxy6fv/llw2xcLSGmfPnkFV7j/cdwjg5Be4k3gYSVaoVcoIy8TjCZLd
      WCQQaT2gJNjYPDn55Bap2DIAmtONEIJ3L1/mnbcu8d4HH+BQoKOzm4319d3jAPtF1lx0tYVR
      nD5UWSIabUXTVCTlIHvibWwOBlXT8Hi8ZLbmGT71NVKbSwjN/+QCAAiEHnhpxtlcsE0IcW8g
      7F7k77yNNDT4NFHtpKMdc3uASAhxf5xBAKPnDy4ezQEPDEQ9GFdHyMmlsS9+aejL0Bl27Zkm
      IUm0jJ45sHgUx/14Ho7rzHA7/+57Fw8sruP90b3vE5BcW8Rs6AcWV/vg2L3wo33DaI7mKprh
      zl4kSeLciRNcvXaD7/7xnzF5+zpd/WPEYrGXf5G857kYn52mFz+eLxvXM7PoiwxIxTeYmVs4
      kDUIZFkmmUwiLJNyubrjN2FZWJagUqk8sM8gmfpiB7qGXqOm754usN+LmkomsB54rpTL5X2d
      dy8eSSId3yC2tXss5lFpSqQyXxhmM027R5UflyZh6SRSOYQwWVlda+4z6pRrjf0kZV/x5DNJ
      VmKb+5gys/se7xne2jzxyWvEJ6+RXZkFQNfrlMuVXcceyph4oVyhp7uLYjaF1+MmW6iSL5UI
      uDXyZZ1IwEU6k6e7t5et9XXaegYI+R7dK5WILdIQgkqhjNmoEmxtp5JLYdZLJMwAIbmM5PBx
      fOwYhXScxVgOv0dhfmEdWZEItUQxKgUklx9Ry6E6fHh8PlYW12ltayMRT9I/fAyPYz+XSxBf
      nacueWjkN3AHo8iWQTGbomKqDPU/xtsGABYr63FGRkfZWl8lXzEIhXwE3Rorq2vkdRd+tQqq
      m9GxUYqpOCvrOQIejcWlFYSkEAy3YNUKSK4AVi2PpnnwBAIsL8aItrWR2ErQf2wUz2O6uxOx
      GFsVE0c9zlJcIJvzON1uJFeQtcV52trbSCQS9AyO4HM9QXaydGJbWTrDTlY341TzeVqjYVLp
      HF0dUdbX47S1t5BIJGnt6ISGRCoeQ3GH6OmM7hlkcStGJR0HwNPSTqhvhB//9McMD40x1NfN
      6maC7vZW/KHA4awUb+h1stk8hXyWeqVIOpPBG45SKlcJOSTSpSpDva3cvDVN1bCoVr74CeqL
      tFPMbKEXErha+ihkExiSg56udnq6uvAGwgSdGgawthFH1fNsJHO0tbXj9IXRCwlWNhLUqlXq
      BvgcEpubm0Q6+rFqFeqlDIns/p7ilewWectNfH0FWZapVirksjnyhQLrsdg+r5DM2MgQ07Nz
      FCo1gprBWiJHtZRHdvnp7u7E4wvR6nNQM2F9I46kF9hK5Il2tqG5AhiVFMux5L00+R2CzY1N
      WrsHsGoVGpUMW9ndT8SH2UqmqKQ2kVw+unt7qDUEEbdEfGMVf+cQhl6loZeIJ/ZaUGUfCIGs
      qGiaRiq+SWf/MFvra5gNnVQ6S62UYm0rR3f/AJV8mlwmQ6FYY319v9eyycUzZ1leXuTjKx/j
      psI//Oxn5EvJwykBggE/uXKFzrYo8a0E7e3tePxudEKkizXclFnaLPL6K6dYXl7Ftz2l9VFE
      whGUcICyqVBKb9Da3oMqSzjdGo3VLdpaI8iAgqCnf4ig30sqm8Xr8eL0WMjCg+pIo7h9eN1h
      XKpCrzdEYiOGPxjEG2wl7P/icZG7GLKb1y+eo1jIUy5kcbg9hPxeSoUM3Z79OhoTpFMp2ts7
      8DkgVzEY6XQST2Xp7O4mGU/R2hpGk0GVBd0DzTSlMwW8HjeaYiHLflTVtZ0mDaci0+dvIb7e
      TJMn2ErE53ysJX3Do4T8bnLZIlG/A8XTgeyU6OmPkNlcxREM4vaFaAl98T16JIqT1qCTeEHn
      zMkTrKys0N03QDKVIxzyYxpRQi1RXA6NSKQV05TIpE3Cnkd7L5RVDUVzbG83s3gml8Pv99MW
      jbCyleGVi+e5fm3y2TWCn4aGrqNqDnulSptnzgspABub54U9Z8HmSGMLwOZIYwvA5khjC8Dm
      SGMLwOZIYwvA5khjC8DmSGMLwOZIYwvA5khjC8DmSGMLwOZIYwvA5khjC8DmSGMLwOZIYwvA
      5khjC8DmSGMLwOZIYwvA5khjC8DmSGMLwOZIYwvA5kjzXAVQLaZJZEoHEtbl3/wzDy/jZ5kV
      1mIJABanb5KtPH41RKtR5cbE1K79ua1lfvmb98kUHu08Kra6ivkFPjU+f/89MsYBr9xnc6Ao
      P/rRj370qB/L2S0m51eIxdaJRNswakVu3Z5AFwpep8XGZoZbtyfo6owycesm2bJO2Ovg1u3b
      FGsGLX4XE5MzbMTWMBU3q3c+5ncTMQIBH6GAj3xyg9nlVdZim7S2tWFUC9y6fYdKQxAOeZm4
      cZNYLIbqDtAoxKngwS0qrCTLJGPL9I6MklhdZHZuATQ32a1ZfvGrqwTCQUJeFy5fhFo+we07
      UwjFhVszmJpaIBZbQfUE8bqavofqdQOlUWFhbZ2VpWUCkQi/++dfUnWF6OvuZGNplpWNJNFo
      lHIuxcTkNIZl8U8/+wcMZAKRKMn1RWYXVgm3tiEZNW7evMXs5CyD587ieU5OYW2+PF94Zwrx
      ZUpSgBPDnXzw4RV+e/kjTp45x+yNqxRKaf7fv/sxXf2D/O63H9Bz7ARDvZ18/OFlhsZPkVq+
      QzKX485CjNNnz3L9s0/o6e1lZPwUAz0dACRX5zA9Ucb6Qvz24xu8/8Fljp8+S2rxNslSldmF
      Nc6dP8cnlz9ga2mSjbwO1TQTi1v3bAwEQ4TDId5/7z26ensZGhpldKiP2PwE+ZrBbz++yrnz
      57nz2SeUymmWYjnOnhjhytVrzQCsBnemZknHFsmZLo71BPj8zgpDg4McP32W+tYcBTnIQETl
      kxuz/PajTzlz7hztbW30Dwxw4eJFnPUEU7EiZ44P8v4HH/H+u79h+MRp+rvbn92dszkQHvNo
      kvB43Li8Acx6hVRik4lbNwlG25AEXHjzbYZ7OyjXTcI+N06nk1Qiycyd2yjuCE5FwucPoCgq
      MuLecvUPRu/xuPEGQ+iVEqaQcDlUIgEXuZKOy+1BUTRUWWLPBY+FxW/ee59gOILbqWwfI3b8
      LikOVEXB65CoGuAPBO+tX/zwpQgG/KiqihD3vVbnMiliq8ssbhXobQ+ArKEpCk6HAwkJIaBa
      zBJbX+f21AKDg/3olozf5Xhu7sBtnpzH+AYVzE9NUF61OPvKa5Q3giTKBi6HA4DnAkAAABD2
      SURBVFV14Pc1M8rFM+Nc/vBjwi2tvPbaBebWs/jcLlRVxe9trjbp8/sJtvWTnb7CWouL3s4o
      YDFz5xab1Hjl9Tcpbc3zye8+pVZXebvNw0cbq3z6u0/oHhqlu1Xl8q1rmF4Dv6cfp+VHQsLn
      crKyvIwlaahaBIzPWFhZx+X1o6oavW1+Pr1yBeFvJ+x24PUYIMn4fdurYEoSfp8Xh9uJoSnI
      igOvGxySB0tV6DpzkbXLVxG40TQnA10RPr1ylfbuPob6O7l65Qrnz52hNxRDCIGmaYz0d/Lh
      J5+SzuQZfYY3z+bp+ULXiJvTn7LpGObC0LNZ+2v+2mXMnnOMtfv3+LXOz35+me/+we8/k7ht
      bOAxArBMAwsZVXk2RblpNEBWUeS9vOAKdN3A4dCeSdw2NmA7x7U54titNJsjzYEvkHF3lciH
      VwW0sXkReSIBCMtkaWWNoYE+VpYW8YbbELUCNaHR29V+r/vP7ga0edF5IgGYRoNStUK9kkd2
      hciltwANlRoN2rGXyrZ5WXgiAagOFy5NRZJlGo0qpikAA7D2Gq6ysXlheSIB1MoFLNMiV7Hw
      ahae6ACiXqRmqajA06/+a2PzfHgm3aCW1ZSA3QawedGxc6jNkcYWgM2RZl8CSCbjWIZOOvuE
      q4Hb2LygPFYAlVyCv//7n/Krf/4NdfPhDk5BcmuDUqVOuZgjkz+Yt71sbJ4Xj+0F8oTaOHt8
      mESuiniof6dRLZIq1DDTc6iyhowgGBy3u0JtXhr21Q2ayWRQNB/yQ1lbCEG9Wsbh0tBUJxom
      phDIloUQ4l5vkI3Ni8q+BNDb04PhCCCJnRladbrxODXc/jCqVaNmudEkCWFPhbB5SdhnCZBi
      dvkmb/7eH9ERDd3bLysORsfHdx1vz6+2eVnY10DY4uI8reEAhZpMT+fj3w6zB8JsXhb2lUMz
      8XU++fQasuZ41vbY2DxX9iWAbDbH4MgYQa/rWdtjY/Nc2ZcARkaGSSeT1BqP97RmY/MysS8B
      LC8ugGSwuR5/1vbY2DxXHisAYZk43T62NpJ093Xv/l2IHR8bm5eJx3aD3vzsEyRVY+T0K4S9
      OxvBllFn4s40bV09ZLbWqFsqZ8+eembG2tgcNI8VgENTWFjdpLq4RjDwXXrb7o8D6NUC1ZpF
      Ir6BzxMhgEFDCBR7JNjmJeGx4wDCsrC2D5FleYenB2EZTE9N4fCGkI0KNUtjfHQIYY8D2Lwk
      PFYAscVp/um9D2mPRugbf5Uzo72PDdQeCLN5WXhsDu0ZGufCqXE0h4tQcC8fnjY2X55sLote
      LVOu6tt7TLLp/J7V5mKxgKVXKNUMMuk06Wx270AbFQrVL9dVv6+5QA6HSlffIJpk9/LYHAyT
      05OMd7SxljPIpTfpGxvHyhf5u//nP/G9P/4Bi7OzjJ86xfSdCSSHh9eOhfl0Jk1nZy9ezWBp
      5g664qc77GBiOc7rJ4e58/lHuEfephSbZvTUaeZvfI6paITaOrl4+vieduyrjpLLZrjy8Qfk
      Kw8vSmRj82QICwzLoFavcuzkWYqJdZLJGmfOnyezcodiXef6jVuMn38Dv7v5nF5ZWcPt8RDb
      iCG7/fgUSGSKhAMu5hY3eOuNiyzenubsW2+zPD9BuHUAl8uDZOmPtOOxbYBaMcMvfv0egYCP
      weOvMNTd8tjE2W0Am8exMjfJSqLAudPjSLKTajlHo66QSS/T0t7D3Nw848fHmZudpat3kL6o
      h7zloZjeRNVUNNWBJGDmxkf86voq/+uf/4C5+XkGj59jbuIm42fOIjUEulFD01Ta29r2tOOx
      ArCMBp/fuMGxoQEMyU1r2PfYxNkCsHlZeGwOlVWNeinLtc+ukS9Xd/0uhIVpWpimgWHaKyLa
      HBSCucmbzCzGSKwv89mNO1hCYNZLfPDB+2wkcsxN3SKVLz9VLPt6RPf39dI7PE5r8OGnvyC2
      OM3E7DIzk5PcuTNte4WzOTBaO7pYnp3G4QtRz2yRqzZILM6Srgp8cp6k7mV64voTh281ivvr
      BVpaWaVSrVIzznNmrP/e/noxw/JGGktx0NveaY8E2xwoxVwWS1jotQrVWpVavUHL4Am+01fn
      g1//lPDoN0CWMIwnm6VsVTYeL4DpyduYQuAJtDMyuHMynNPfwtfeeoONeI5GJUtJaHTb7wTb
      HAgm6WSK1s4eitk0jkArTrNGsdRg8s4MF77+fdbnbxHqG0FVv7yLWyFM9OQvHt8IrpZyfPLp
      ZwSCIQZHT9AS8Dw2cLsRbPOiI4TALM08vgRw+0LIVo1cLkejYTdybV4MhGXSqOep17I0anka
      9fsfo1HBNGpYRg3L1LFMnY7hb9PW9/a98yVJQnH37q8NoKkq5UodU9h1epvDQQgLvZolG79O
      ZvMzStkFFNWNy9uG5gw2P64gnmA/quZFUV0oqhNZcSIrDhyuyK4wJdX7eAHEFqcp1ERzJqjt
      883mOSGEoFEvkEvcIr3xKcX0LKrmIdR+ju6RP8QXGUVRns5JgxDCXh/A5sVBCEG1tMHG3D+S
      i98CCUJtZ2npeo1A6ziKenBOGYQQzCbj+18hppReJ2146G8PH5gRNjbQrN4UUtOs3Pk7GvUc
      PWPfp//kn6I5A/s4V2AKC9OyMCwLw7Qo1Kpkq1WylQq5aoVspcK5nl7OdffcPw9BLJ/dXwlw
      48qHxOIZHL5Wfv+dS+y5sPsD2CWAzX6wLIP0+qesTv1nNIePvpN/Ct5BJuNbFGpVyrpOWdep
      6Dp1o9HM4NaDmd1EN01kSUKVZRRZRpUVgi4XIY+HsNtD2OMh5HbTGw7jd+4uQfZVAhQqNUaH
      e5mbXSFbh5btcCzTYHFhngYONKtKTWicPD56oBfJ5quHEBaZzWss3vwrfKEhus/9L0zmTP7x
      xhJ1Y4kzXd1EPB7CHi9ehwOvw4FDVVFlBVWW730URcahqMhPsR71vkqA67/7gILl5eK5k3g9
      7geawoLk5jpVIWFUTRwYtA4NotoLZds8glJ2gaVbf4GFg2zrt/gsWaWi65zv7uH1/gHafM/3
      pat9lQCd3d189o+/oL2nn/E+9739Rr3EzMIqA8PDNOoZipZqjwTb7EIIi1ppi6Vbf8NWaokV
      39eZrXg4oTv581fP0hEIHNrDcl8lwPLCDPlCiY7+Udojj1eo3QY42jS7MPNkNq+R2fyMra0p
      tip15pXT6IGTfGNknDcHh3Br2mGb+ngBTFx5n8/n4gRCQb73nW+jPK4FjC2ArypCCHTTpG4Y
      lPU62UqFYrWIUc+h1beQK+vItQ3yuRjJcpWE0kPNO4Ls7SXoDfHmwCDj7R1PVWc/aB5bBRo/
      9waKZ5q5xRWS2SIdLY/vmrJ5+RBC0DBNdNOgZhiky2XixQJbhQKJYpF8OUu+mMTZSKDUNvGZ
      adocDdq8btrCXQQix3C3j+ANfgvLEcHp9OLRtBe+HWgPhL0EWEJgmCYNy8QwLRqWSVVvUGk0
      uwhrjQY1w6BmNKg3mt8N09zuHxeYloUl7nYhCizR9PVkieZvte1zJKuObJSxqnG8VhaflaVF
      reKXG7T6Avj9UbyhQXyhIXyhAZzedlTN+8Jn8i/CFsAhcrdKka9VSZfKJEpFkqUSyVKRQq1G
      3TTQDQPTslAVBU2WURUFVVZwaxoehwOP5sCtaTg1FZeq4VJVnJqKJsvIEsgIFKn55pOECUYV
      vZpCryRoVJLolTjoWRSzjKJoaM4gbn833mAfnmAfbl8nDlcY+SmnHbyo2AJ4TgghKOs68WKB
      xXSKxVSKrWIB3WjgVUxCGgTkGn6pQkCu4LRKqEJHxUTBQggDyzIQwgJh7fhu3kIBQjRX8hQC
      JBlp+3N/W0F1eHF52nB525sfXztOT3Q7kx9+o/R5IYSgbtZsARwkpmXdq4bkazXW81lWMhnW
      83ly1QoqBiHVpE3JESWNz0iiWUUU1Y3q8OPyRHF623B523B6otuzGp1IsoYsq0iy+lCG3t5G
      Akm69w3SgVdLhGhWnYSwsLjrDbwpvuY/tgXYzE4C0dTk3b+3zzctA91soJt1dEOnZlSp1EtU
      60WqeolavUhVL2NYjeZ75paJaRmYlrEd7wNxPhAf4m68zW5X8YCNlhD8/qkf8NrQ1++lxxIm
      /7zwf+9/LtDjyCS3qAmNrrbHu005bJoXSTQvrtmsGzcsk4ZpUWs0qDZ0Ko0GdaNB3TDQjWbP
      h24a1A1ju87doGHomIaO3qhRrOQw6zlUs4hRy+ChileqEXVJnHBKeBUTVVFQ1ABe/xDeyGk8
      oQE0dwsCiYZlYJgNGlaDnNnAsAzMagFTmFiWhSVMLMtsOtR54CMJC1lYaJaJ2zJwb39rloFk
      1sHQkcy7n8ZD5wqk7RJDQmCYDXSjjm7qGKaOYTbuZz7L3M589zPg/RKHHRnxXlYUd69287s5
      +9JCkSQUJFRJxifJhGQVRXWiKI7tb+2ewKVtMUt3hb3jTm7/Le3ct2NLaj4UHq7AyUh8i/aD
      EoBJOltGwaIRjSBvq9Gy7hbPzRcQHrW9srHFhzem97e6pLj/tIGHnwDiXsY2TKP5sUxM08S0
      mh/DMtENY/sYc7th2Nw2tzOYRDNDyAhkLBQEqkSzLi1MZEwky0TFwiFZODCJCH07Q7H9UQEf
      eVmlqDi3p+6K7WuyjmWtbjdGzXtPL4m7303uOuK79/f2MTLNur0smt8qAg0JSXWB5kZS3QjV
      gSkpGLKCKauYsgsh+0BWkWUFSVKQZRVZUVEVJw7ViSQrzUupSKDuVaLc/Xvbml25T3po86FS
      6G6JJSv3tpEVHu2b4X6OuFtPEQ/seDC/iG2xPSoPnVXaGdvOj838B1O+rx1cCfA0+NwORnra
      2f8Cqw8/B+5uSLt+l3bsb+6R7t2cB7YfqErcv7nyvSfIzptv86zZ60pLD/z3oL7u3uMvujvR
      YPNV3ntTdCRo92kH1wbIJLeoWRpd7S1Htg1g8/LxzBrBlmW91P3DNkeDZyKAu+w1I3SvfXfF
      sp9jn3YfcKjn77XPsiwURTnQMPd6+Bz2tdvrvsPumsJzve/PUgD75VEGHgXstB9u2g+lki4s
      k3Q6jWkJCvkshiWoVUoUy1UMvU6h+HT+Hl9khBDkMml0w6RcKlBvmDTqVXKFIkIIarXaYZv4
      zBDCIpNOY5gWxUKOhmlRr5YplMoYjTqZbI7n/Tg+lBKgUsxTKGZJpypoPg/CFIT8LhLJNA5N
      QViCgdFxXOpXrxHdqJVJ50tkMhmECZKq0NYSZGs9TvdANwvL67xy7sxhm/lMqJUL5AoF0ukC
      isMJQCToJR5P0tXdSTaZoKVnmLDP+dxsOpQcpqoyuaJOW2uASLQDVRY06hWind1omoMWnxf9
      K+pXVNU0suk0ff2deLwRnJqKMBr4o22EQy0EvAfn+eBFQ1VVcvkyXR0RguEomiJh6jUi7Z2o
      WOD0EfQ+3zlHhyKAXCaDJQSqx08qtoAvGCKbKVApl/F5nKRqBj5NeXxALyGVXAYdmUoVhJHF
      4faSyWSpVyqkU3EKhQKF8lezGlTIZjAEWIqLUjqG2x8gk81TK1dIZTKYep2G+XwffC9EI9jG
      5rD46lWybWy+BLYAbI40tgBsnhwhiCcSCGGxtRV/1EEUi6XnataXwRaAzZNjGfztX/0lqWyS
      //h//SdSm2tcu36b2PIiN25c5xf/5W/56OYcv/z5P3D91uRhW7sntgBsnoqx8SHe+/VHDI0M
      cPX6BEGy/Pq3V/G7FWrlGv19fbi8QTZiy4dt6p7YvUA2T45lMjO/SDaTxe12EvI6WIvnaQ35
      ibaFySZSFHHjkAzA4uSJk4dt8S7+fyINeAT9gW6IAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='58' name='Sheet 1' width='192'>
      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
      ARw6CoP/IWxIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy915NdSX7n98k85npT3lugYBuNdmgzPT2O5HC4jOWQCgWDIWklURuxT3rS
      kx5H/4Ei9LKhoGI35JZLcUkOZ4bDmelhj2mL7gYa3lWhvL+3rr/32Ew93PIOVQB6gJH4rSjg
      1rnnZObJ/P0yfy5/KX74d+/ppZpL46VLABAGZK58RtJTzL36EiIaB8B6cIdYLkfp7BliC5O0
      FXy80MWXNoVXXyY2OU5PMaAWVEmaKRphnUqsQdWKYtVcLA1xASoUrKWiWJ7C6WijL1fFdDXT
      w20Y/Sc5CGJtmW+O3yErzc1rnlY0VEDasBEHPvlssBb6vNfZiRg5j7z+IerCWyCet1Y+Z9C6
      2UdhQHRqguHlKra0qODy8OUXEJHYU6/SLM0v4+d86qu/YPX8eWjrIq4thudXme5eQfQMgmFg
      hpLOh7NUakVEocZDq0qnP0JFlZm5aKF7TvBg9RNE7whdN+8Tb3iURZ3ciZOol94GrZC+h8ot
      Qd9I833dBqsP3sft7ob0IMIzDm5ppJ0v6j6Xijk+ly4xbTCXTLLUM0LSqXNuaZ6XAo0h5FPv
      pMdBJAw4v7bGtWKNuVAgGxphmo9+8P+H0FrD7H36HzxEIYn5gjbPwBUmq3qNeyd7qIskeE+/
      blMDSR0nXRR4n1+m9I3fw0nGEQjab1xB37uF29FH7cw55j97l8xKAS3aEV4ULDAIAQFBgJdI
      YA6Mkq83SNyepKEahD29SMMEIdBWBDGYQgc+KIVQCvfr30FdeR9RKSCih3C4ZXP10re4MzeB
      tgy8RAu0dADgAr8arXD/9mW+s7xC1rARz3i2TRgmY75irrrG/Nirz7QtzzO01siHd+i5c4dB
      lcYWNgAeIbfaDXLnLkGm7XhlhgHB3c8wekaQrV2H1m386b/8s+9RkyAg4WnylkfY2g7VAj1V
      E1GrYrgetTPn0F0DWNNzRLWFH7okzTQBHiuihpQWslRAdPaiY1E6pxboNLtozN/GyaTRYZPo
      rfu36L98lbbxSdoeTFJ1CqizLyIybY8kWmEYhC0dhOk2iCV2fmdFqHb084CAU2t5IvKQ1eQ3
      gEWvRtywsCtl7rzwOsK0nml7nldYd6/x+p1lOkUKQxiEOmQy2uDBuRGqF16GdRH8OBBSIjv6
      kPHk3i+1RrsO9sRdOm9eQ/zoL36mJybHickEMSOOox00AkVIUjaJbKInRj2VJujuQasATIv0
      z7/PCTnAQrjIfEucllKDE6KHByda8SM2528vI4WkHlbxCQkRFC2PobAFibFJ7J5yGe9P4L72
      9hN15Ob7eS5/+E9/zynxbBmgoQLueCW6jQj/z+mLkEihe0efaZueK2iNNTvOyau36RAZhBBU
      VYNbZwZojJ1BPMEEpp064t4XcPEru6rUxO9eY2Biig4VQwqJmffyVDKCiu/Sk3XwVjQZ0Y6D
      h698AkJqHQMkxyepWAb6xFkAZLyFRt2lbtoYZy/R8/ENDGGQnlth5fQwSodIIYkbW1zYqmBL
      W9WAQApJLB7BfezX3QXTZDUaZczxnqkYFBUGKTPG93sHGFieI1Qhc539CNN+Zm16nmDducyF
      6RwJkUYIQSmscv3CCOrEuSc3aNgRwr5htrOQKuYw7l3jzHKdpIiv06HGLF56i3KhTuutmwRL
      deLSZiqrKZy5gPZcRCQKHb2UBkZBGpuNK331WxQ9BwwDYUZYSIWcqHnIMCRs76Ss7xANmkqf
      qxxa7PbNxnjKxVNNEcoJ65QrT49QhTT49PVvEPnoXV4L9FMr97Hgu7RWS0y//HW0U0MY/ywG
      bSBCiOFIpClxlcdMIiQcPfNUrHlCGhjtvZt/B5M3EV/8khfoJmmmdtxringSc3KBbMEnMExm
      T3TTOHcRIeXOxhg7LRgikUYk0qhiDnyHyqmzXHc9iMQQySyTr50nsVZAuS7xYohXW6MuA+ra
      IZvsxonHqZQcyj1thBdfe7pmzHiKz0dP89K925jP0CrUH0lQrpZZunsZ/drvPbN2PG/QWmE/
      nMaSHVSCKg/iLuXXv454wrFSa8uIeGrTdA8Qrs5jz90nGyiS9l4jiwngnjzD/Y5ORCQC0cSR
      RQftNsA0kYkMOt0GgY8u5RGugxwYo9HfnIGdMIAwaDKRNFgWAgGUVIgwzKduw9da45RyeCrE
      NJ4FA2hWtYNUigVDwMiFZ9CG5xdqeZYO10KYAk/5lC69jTympWc/iJbOzc86DCAMkcks3tB5
      nLUinvIx5c6J3AQQQiCyR2+AViFq9gFmIU98dpzqt/4YrAg9775H1pW4UUUjFWUlGSO8cAlh
      Wmgh0ZU1RKoFsd4IYXx5dvGgtYuZpQXOfGk17IXW6yKX0JSEz3g2zvjFbyOS2d9gK55vaLfB
      4LUbZIwkoQ6522nuINwnwfaJW9er0KighcDoHCA4MYYYL+x+AlNXChBpZz+o/CJ2vkDLxDSF
      82cIBpsOLO58wYk70yjhExUtTN+7i9PaglWvEbPbiXqaTB4qCYOqlMilebqvXCfhCKYHU3hj
      Z4nfuoMOfZShELEUWgrcvn5o734qHSF7hlmZfsCZ+pfgPdkFrTVCCEKt+ExUuKQTnCBGT8nn
      Xr0C/8wAm4jdv0m6WiNqd7Hsr+GduoQ8qsSxPsHsIHS3AVYEIZsrvVYhOr9EdC2PGfhkc2tk
      nDpZx8aQkd0lYorcErK+ijp5Zq+rfnmBZHGVbs/CWVigMjiC1pqYq2iEVXqiA1R1lUYyglSK
      rJnZbGCFBrVTr0KtzOjnN0mFMfJxDz8Wpf3dH9Nn9uDpBlWjSJsSTUvAzBdMvPMaIrs/Qx4H
      woqwfP4c9U8+Iy6/vJVGa43WmrXA4Z5TJNvXzkeuIumbfHLiPDrT/tyFaTwraK1xIjaWsKkF
      NZa7WpCd/Ud+tv0XP6HW2o5z8bX1a4pg+i7GwCnEhl+olOfl9z8hZTT/bjJLDA6QhOXQQpW+
      u5OoxSl0pYhu1FDzk+gwZODeDJ3LHnlviXpvN1prrHs3aJw+TTkqUCiKmYDo8hSymEeILYJY
      6UpDIk1k/D7JwEZrzWJnCvPOJ0QCEEJjiwjxpEVdVVBakVIR0nfvPmE3b2EtNKnI8KmVdxCE
      ACkkvgH11SK1hs+vXniNxthLX0r8ym8tSnnO35ohY6ZYVAUKF185cnyUrpVxlI+XjDdpzHfR
      977AHD4HftOIrsdvoYVAi+aEehRd1jSlCUaD4c+uE9ERHpzro/vBfVZKBcJIhEQQp2J4hIMn
      QIW0TS0QLC6T0CmkEHSX4rh6mrBlgFCXmY6XCVPdVM80pe9ELo8QUTzlEsSTDIsBYnbTQiuE
      wG9EWRztwSWke24cJbrQYfBU9IPArbNq+nQGNuJLmoeFEGgNC0GdtpYsVbdBtlqhbW6C1Z6R
      L6XO31a037hOixFtSgidnYhE+kjPaaXo+PgDOsouXLvNTKFI7dW3EI06orSG6OhBN2rEcqvU
      u3rxObr5WwJkvCStOkWCCC13btHqJ+gdn8VNNZ1Y0dBC+x5CGiy/dJ5U0aFVZBBCYgqTdtWB
      39ZOgwBhtVJ58yuQaUPVSrSWmzOwJWxkpUbJamAbTVksUAE5P0c1P4ecm6DV76R/waf1179A
      K3Wszt0PYcOBqgPH6JDHgRCCc5EsHVWNymTJZlqphsGXWudvI0Q8ghQSV7mUz7xw9OhYz6G7
      6tFhZeiwMnQvrQBgtPcQWZ5DzU3Q+Y9/i8pmkXaUldY0rvKPVLQEMKXdbIzQDOkuoiJKMpTU
      cNBakRQJzMISALqrn8mvv0E+4m0W4WsPkmlyYZ7iSO/W0uP7bJ/HreIqEc+nFlQAiSFMTN9j
      YLWGzC9T9cvEZJxMvoKYvH+0zjkEllYMWIl1+v9ymKAcuNTDZmd3mjFeKYSMJ1twBk9/KfX9
      VkJrIuO36VvKo9mryD4S1RKxbZTk2RHQmmguh4xYyFoVmYhy6f4yJ3/5HvkLF7k11I7Sjx7z
      baqBAvRmqEJUJmhXdRQaQxikZuY3rR2itZOFl1+goRosO3MUsgmMYoG4sjHcbUENWmHILXHn
      pBklEbeIGk1HhRQGveYIHdFueuMDWIYJQmNogXX/M4KZe6hq6egdtQtxwyAhDT5zctx3y7jq
      6c/KpjS46RSohB4asIXgxdVFLOvZxiI9T9BA69wCyTACNEPWRa1y5OcjuRWisulF11qz1ttF
      6rOPOTu9Qswv8cqdGdpUDAF0OwbDV64gQo8FFh5ZtgxVyNbsuMWVQgg6is0IPSEEdr7c3LCw
      jqCzl9k2i+JLL1F953dIPbhGp93BifsL6GKueZNpUxE+rnKaoaflONG4vV6fQqMxZTN0OWu3
      kjBTgMYJ6xi5POYv/p7Rdz9Ary0fubO2o5Zs5b10hk9GzjGjnS/FKxwTBmejLUyFdT508ng6
      oNeKkbn+ftMZ889ACMHSmTN86k+Rc9cwhEHr/KOJE8BcmuPMxPz6iqFxlEu9s5PupRy2NPHj
      LUwOtBFxvM26+mtwdqGAHX+0Hmn819/9777XqLhsEb/YVBiFaH7WaMpxqA2PbC5dQgi8gWH8
      tk5kJc/IvWVMYWFjsBrX6LYuRCRKkTrarBIUc8TNJNK1kZuEqNlPNIkYMRJmkoSRwA9q1Ivz
      qIETzVikYyydYTLDSt8orK2Qa+/DWHxInx2Hp6gQB2jGVQ0jUNw69SJrUnLCcYj7ivtDp577
      MGjtNlD3P4dbH6LjaVpvf4CTzKIj8acaTKgTzX0gQWGBDpkm5ristqXR+4UsbzwTBvS+9xN6
      2Ap9N6WB0yhT6Giht+SSXClgOBWc+BoxN9FcXYSgkakjNMT8w8OpZUXVmU8E5G0fpdQmwTdF
      oi10lQKMy/+EbtTQKiScn2jGC0mJtmI0tLvZYcml1c3Zz8akd8mg1erkIDlca4XSG/UJLGmT
      tDIkrTRO2CCZWyP+0/9E5M71LW/rERGZHefS6iLdjRor507hPgXlejuKoceS1yBhWMQbVSY7
      +6mrgEKjDMHRFLFnBXntlxi/+mvGHn7KxTDH0K2fcXrxNm9f/T6tt37d3Lj0lCCEQF14g+qZ
      lxm3Gix4a8R+/WO0f4ijUmuK7S07ZHmBIJNbozI8Sk17pLDp9eN0VXswt4XAJ4tpqjnvkfRi
      fPO//x++tyoMii0xqqUp0mFkm2duYzXQSCFpryr06jxVG4hEketmLFUr0TuT22yAVauSs0NE
      uhXV1kG5skCptoQZKCIiCgKqfqWpfANVXaJslIloGymszRXIEBah9jGFSY9op1Gcwm3vgkNm
      jd2IFZbpWr7H63WXRKNMo+GSNXd7BB8PjgqZdCvk3Trl7gw1I0k908rVlnam+4YRrZ17ggif
      NdTaMrqYQ6/OYk5dY6S6xO9kbDxDcN53GIlbdOiAV50cd2oubtfwU6tbCIHq6KFy8jS1U+dx
      B0chDIh//hF+3+CeYDghDexygZ5CY8dqlI8blHp66JuexxLN/pXrM/9WXZBej/w8bCUzh2dK
      ZObLKBTQs8sypXbM2RJJS6GG/vBDVv/kz5p3FHOgFQ0jJLp+s2eEYDa3QQrDpPH6O6iJW1Tq
      NVpyc/RgIn3FeHmKZFc7yQos9o/izs3SH9gIsaE4Q8ZqJdQh841JLMOm+6NPWPyDf3Fk0eLs
      +B0u6AS/SJioisPZp+gOiEqDC7EWtCE4V7awRZF6bo3LuFx77ZtgPR1Ge1rQjSqpn//vmIkY
      OA5nZUh3KkbalJzXMOtrlqsKMxbwebSD6smXYXES3TnwVOO2hBBgmohkFt2o0ZLLE/n8Y9bG
      Tjd9A6a1SbSyVNzzvBexSc7NEBOH761oFnH4gBv/1Xf/2+81yu6652yvaTbQPoImd+X9ZVbT
      LvmuLkT/SQg8Wt/9R8JqniIVfFNjuT7KMnCr87imici0I4Rs7s1s6aDtxn1oKBar85Tf+Do1
      DEpxG18Iaj09JFeWiIimtQAEUhqYwqQWVDCEwaIsIcZeQhhHsLJoTaK0REetQrzu8nnvEGfL
      BbJm9NHPHhFSCHrM2KaCndcen736Fm7n0FOr42lA18rYH3+f9loOo9Hgz7uzjMQjDMQsLCmY
      qbm06HZ67CRrjRC/ukxy4gH25EMatoVu6z62TqADH0p5iB6iT5gWlcEhonevcvbBHMnJSSit
      4GSyYEeRd6+QDCAqthhwzRL4MZvuovOEeorA+Maf/5vvTZshsXJpcznZgK8UUz0Cv+EQUwKt
      NDge5TPnQYWYc9MMrNbpapgsJjSNN79FcuIBLaRJ1DW5lduY2kIlUwirya2R+7foMFrJmq24
      KxN4b34L3d4DizMYZoRyNkpirYQtLDaYQAhBysqw1JgjE++gZhlN8eKR7yfIt/Wx6Na4fuEt
      pGEwtjxLy1NkANgK0poJXb5/8XXqvSeeavlPBK1h4hrJ2ducXrnHaDzKWDLK/bJPV9QgajRF
      3MW6olWmEELwoFZGG8N02r20mhmqs7dIz80ia2W8eAKOGN7RcuUyp29MsJyNIlKZ9ebs8gNo
      TbjwkLC9h8GVEi3CprMWYM9Pko+Z+CfP49bLdNW3LGq5uEmps4PI6jL1TomoNzC1+RjMIJB2
      vU61r5eaVmitCXWIpzwWE4qbJ9JoI0mhq4UHvQly7VlyHS3IdBvhvavIahVHhhjCpK0OavIu
      OuqitSJuJGiJZhm8fZ/2y5ebnt0woGYLBBJTmqR0rLlJuVpB9I3C2ZeRCyvMJR1c5aw3smku
      1SiU1ixkI4j1bZlHekU7Qv7iO+hMO7HQo986/ibr7diIdWr+qvVfzYT2+eHLb+L3PUfED/DR
      DzCv/BR/cZyTiShvtiQouwExItwseExWXR5Wfbz13XtKa8okSFsZNE2/z4loH6f8JBdnSrzw
      6w+JzE7sUS514O8x+/q+z2JbArKtAMjlOaxf/gA8p2l9qpXIfPI+7dMLYJh4YstA0e1ZXLz8
      BfH7Nymdf5FlUd/8Lt1wUN0DPDx9EqcYYp8KqRm1x+gcjdlW17RMXGb+1AmW/QDPKcHQeVSj
      xuCVa0SFiW/Aw+EuGq99E+pVhGliXvwqXuCzWl0mcJYpnXsD2TuEv5gDT4CATlNhG2nCtTV0
      ZQ1dWOWk14qQkopfJN+TaYayprOEc+MYgHfxFZKzN5hwC4z57ViyuRJIYdAbH8RZnMebuIF5
      4sWjc3y1yLnPf0KH42GKJ5v9q6HPkl9nLJZh3neYj8V50DvEytApRDz16AJ+g9ClHMbyNL02
      KLdMXltc811sTEaSFg+qGrcRJ2IYDFgGCFBaIWVkh+gcMZq+G4GgRVlcuHqX26FDbejc1hgo
      RfTjn5PFJn/mLEFnH9XX36YqBXJ5kbZPPiRZWqaUSBIsTtJ/YxxfaLpUBIWBf+UesW3hykII
      MmaSC/MlHhjXSYVy023b7UjmJu7S+XCOQaKU7teJ95joeX3sVcD4zn/+x9+bHjmJau9G9Q6h
      M62E0/cI6yXCyiIpK0paZ9DlPKJaIOgbaip3XgNdK9N7Zxo7sFjzi7TOzNNTEQghm/Yj18YS
      FisdUeqGoH/iJmk/iRACU1rMn+xrijJaIyJxZLXM2IdfIAOXmjRZiyg6gg2C1USMGG0iTX7i
      I4LCIrK1a8f2t4MQKy4wfP86VcMjpQwS8vE3pksEP8wmmUll+fSFl5k89zr1zj7Ec6bwqmIO
      MXWToPcE1cVpXjAlKWlxPpGhKxLFlpLuiMl4o85AJNW0n6//KOVQUvb65LOFDeucJQw6l4vU
      c9PUu3ubu/oMk0itzAsLNazFOfKjIxAGRGYmuXD1Dn2eJEWcqOPRupSjRSZI0VR2pQDrACel
      KQwyhRoxY2viCnTI5OkRZOjTVfVxQ49G1SNG7NgMYKa9KD3X7+Em49iNBnE3wMLkYbSOrWxS
      qgUE9Okseq5OYeHHBBGbaC0ktBVJKw1o4iKgrxAghYlY349vrRNaohawlm0nUpIIq+lnkAI6
      Hy6wMnASYdkIy8a4d52EiFAxDJzTJxCmjfPJTWIygV73S9hGhLHkKfKLK3gf/JLKN7+NiB1u
      Fo1O3MUEMg60xrZ0i+NCa81PWrMUX3mH0jrBP6+x/iKZgYtfx/j0H3nLVgyYcUZi8R1GDiEE
      Bk1xbuNFhBCcjMVZqa6B2bejTL2+CkCTMM+thdz/8Bcsf/3bCCGxXJ/FSMjD080Ul+nPPuBs
      ziGyTgdSSDLm8VfJqLFzcilFgGQWy5sAwBY2ZVEiFsaJG8cLPzctYdEZxqEEENvsiN5yg0U3
      R5DsxlxXjoUQtOo4ODTt26EAqVFakV5bJdDtmOvKq0CyUVh7w6TxwS9JGmk0W/H5iXINPBfW
      TZpBVx/ja0Xqo2eRXX1o16Fu3SQWsl5eE0kzTSKR4l7+OsEv/hb5whvI/rF9uV+rkDONBi/H
      WzeuHKuDtqMU+kyMnn3uZvv9IAwTVc7TN32NloRJxrT2Db6UQu8gbI2mHHgEojmp1II6UTOC
      sT6pbb9XCEFr2We5UUPHkohqg0BKVO8oulJiLNcgsmcX1pMhUCETQz1QzDOSa4A0iMkofboP
      IY8/Ha1T1V6iSNsZDCyUPmxDSfM5KQx6xABRuT/3SSEZ1O0YwkRpRd5ZwQ1Dpk8P7MjwJrJt
      1N76GrqrOfOk7lyjJdjZgU5Qx1dN7+HJ1DnSuTWSv/4JzE/u30Qh+aJ3kFyw4XEUj8UCWms+
      bEmjtqXbeJ6h3TpDH/8tf96bISEM0gfY8dtti9K6x3eDsFd9j6jZHBdTGhRSecq6sW90ZYje
      DFGpjp2kpx4y8P57jHzyMXFhrxsw9GYUqD7g59B30Zp71XEWvGUemFXc3iEGH0xgbxObdjvC
      9i1nn3oO9G5IYdAfH0bum2GtaTrb+mt3xWLHTAHN2P+lQfBXagRBiZkTI3D2pQMbHZm4y9BM
      ESHMrYZrmPGmsZNp2twEUhicTJ1nwhlHm8a+4ogQgoFigXYzynFFH1+FrCqXThnlqhFy78Jb
      j5YxtUZOXEU6DfzzX2maId0GSEns1ock/AarJ19FtvUcuR2Pg+DhTdKVVSqRFIZu2vo3m7ht
      bOqhosM0t4XAwHA0wWx1jUy0k4iMUCkluPbKeeLlKh0Li3TUQ6LCpoTL5Csvkpx6QDxfQCXA
      EAYjNQlE0GKXpegQQt8Mk95nfIQQ9CV6KEeLqM5O+q98wlDl0QS/3/vupktz+227iSNu7sy/
      yWYTxea9e19qowxNJSiizZCkbsUUFkHNI5eOYukoeuTMoZuhZbWKoeV6cc2Ucp7yCC2b/Fu/
      Q+ODHzMQtFH2ClSyaYzugx1Py9lWVLGAIQyaauyjOy7UilmvRt5U3Ojt5/a5t44k+qjiKkMf
      fZ/ewOFyNE764VVGVqYpGxYvOQWiOuTvLZtS6/EdS0eFViGZ6Rt8rS3FeNnnxWRm67ttM/GM
      6+FIwZzfYDSS3JLvpSDJllmxXSQ4e+0ud77xNabPvcTM2jKyVCDs6KHt9nXGVipY2sTNuUj5
      ZFa23QS6gaRIkHQTdM84wNGIfztt7v68+a5btz/eYOzLsetiRsJIQ2sDxyngqRhZy4Rckfz5
      15H7hTLMTmAYBr7W4FTxlEvUiLEhqdkyQtwzqElJ7fxr1D+7wWLMgwtfPbSNxeFzfLowzRue
      32yZONytXw19/q4tTbXlJLK1g3pb79GIVWv01C3ygy8QW3rAyPWf8mppmbRSeAhs0Yx+/d3r
      P+WHbf14Q+ceXeZjQFeKjKkqnZEIC9Vgx0SzMdMvex5/lRkgOP8V7MDhu5ffpUdsjUlDG2yY
      FoQQoANY977r1i5UWzfxO9c4s1xDChMEREX0keLMo7B9JdqPto6aQeKoMDeqPTr0hn92218b
      pYj1K83NNUKAzkfRoSKfESS0RV/QQubmFLN2nLB3y0WuqiVGbt4n5UpC7WMIC3NTo1dscH1v
      pJe1m5dRr7zDzPkaIggx+g4+WANARONcPXmeseuf4ChFfyR94Du7KuDDKORe/NqeDNSPhBDI
      M5doPLiKMf0FL1ZrpIVGCIMocl3aDUmEPpRyxyv7iFC1MubtD+mXITk3oOWAVeuBlcB/4w8Q
      0sCZuk0uCOixthjA1WwygEZjaRO1OIVRr5J0oHL+Bbr7krj3vE0T5ZMS/9Mq41HYzliP2CGy
      JersRJPI9WY8v2aL8GGHfiAElmFTGRsjqHhY0qJFRznz+X0id25sFVktEXclvg7IU2G8do+a
      X91TsyVtzqxKjH/4v5GnXkJcfOtILx3YUT5115gMa4/s4kUF+jHScgNgmMj+UZyWbuKbYuW6
      1QSB1pJPO0/inXn98cp/BGS9zMmVB7yWibPkeLRbO30eGwTmRBIgJFqFvDw7zrld4SFZ6e/w
      9sa1xBQSI9tF79wsIz/5EeLabYIvYZfdfu097jOP0jc2fp5wi9TeSpqM0QwPcMIGC7rIVHcK
      1dmLqUO01ng0cGSZlvE7MHmnudWyo49bpzu489IJlr/zRzT+4E+ZTAfbOlhtDkjMjNOrMwR3
      LnPU1SvMtEM8wxuxgzPgaa0phB7BYwR+bUDYUbxYhnyqE19srIghWitqQvKPL3+bu9/8V2A/
      /Xgk7Xu8fefnvJWUrLo+JS9sipMb96yPV6A1DzuGQGta737G27UKhtha0TWa4WiEerAVfmBJ
      k5evjWMW80y8+iKdIk5v0SZlHT00/djvtE1fORqOP2aPiHHdXrHY59rBWHbnaaRSFL/9x82N
      M/duUE9G8BsuU71ZvFOvkfriJvHZBWqDY+jyGjoSRWTbmkmOYgm8S1/n+j/9Nef1ABEjSslY
      xnMDOsw+YjJOeONjzAtfPVJ2ARFL4neNYq2uHqoEa6UwntTOb9qsjb3G3w2c5pXL36etUWK8
      /yx3z3+DoH/syco+AOruZeIztyjXV3ASNnVHcCm9lWBsg4jW/IB3s/3kek6QuvUR/3JmHHOf
      lO3lMNyRR1MgiBsRXn64gqNmsI1jiodPDdvHbi99Hne9OIQBNoqS+1w7HFpr2vjZ8Q4AACAA
      SURBVOxO7o/2bYYt69MXKNQrNO7dxj3zAjoMWHvtdYjFm4cheD7CjEByK1eMzLYTfuUPqH74
      ObaOEAsyzKUK5KsztKsoxtjFo6fWAKaGzjCxvMBJueWk297mUIdcN6Bw5tUn8vAKy0b0naCq
      Nb8aOg+e0wwJ/pJOrdFLU8S+eJc/704hInGiQrAa7lrcNSx5Hn89cJHK2TcRH/2Id/JLZCP7
      z+Cj0TiN+jI10Yslt0zRpjBIPgPi32sd2k2L+oDrh+MAEWi/Qo5e8Iq7ws3BBN7wqc1rQghk
      Io33ypsYSwsMv/sryK805dAggEwL+A64Dlopgul76MBHdg0yOdLGnayLRnO60YZx+jxTZ/oh
      23EsQlVt3dzq7GUffw6guedVefDG7z61fbxCCIRpNVN2H5H4deDvibQ88F6t8e9fIfuL/4uv
      JC26Is1fKSBQO8twlOInsVYqZ98AITgXhozZewl5Ix4IATEJT+I5f5oQe/RRwcE66tFhhlpQ
      CiySho8hYO8L7zjW5ZGoB3Xm+lsxLr594KYVZRrMv3QWBkabyu8Hv6DxymucvzmLe32CQsIg
      4iucqXnyb7yJ+fLXcbXm/sI0iZkZ4vceUn77reaWzGPK6pOnX+Lq7F/zcrRll5wvMIWBH0s8
      s/ge7bk4P/k/iP7un8Ej4psA1Pg1Bq/8A29m41zMJNgwRkQNiWKnB9/TmrkTr26mqalm2hCN
      xoFlu6FiMYwTt5+nTf0HOTK3HLO7xdtH6Q/SVQaukhSDwyIkjz4jrSQExivfOHzH1uAJwpH1
      2B3Twh0aJZVJ4VEnYcTpd2w6ghgDRUXi5z9EK9XMvtw3TOnNd1j5/e+gZx5A4fimRJ3IcK93
      iHDdYrV9tg0NC/Y5ROE3BsvGOvc6RI8mYkQWHvBGJsZoPLo+ROtKo25mq9iOhVAjtp2YmIun
      DkwcpbTmat1DGF0HrJbPEnrX5/0zixwVMtASU2qypveIgh5dkUJTOn36SCHKGxCxBOrsi5iG
      3GZWBURThBgKk8SvfUr44FozZ6gQiEQa46WvItoOPgLzwPqEYOniV/k8JVj064yLxqbfYra9
      c3Pn2rOAEAJj+NweC5TWGq3CPddUrURDKd5fKxNsy+JhSUFtV2rAwDB3RM3GnMb+Bm6tudtw
      weylGkYoh5FnzgR7jRYbZve9OE6MEYBMmx6tposhnvwti3aA7n+8kxBzhTLhPotGhBinZ2t0
      PJxp6gf59SRZUqLK+ceqS0RifDDyCv/h7W/z3qlXWPLreFoxv37u8LPEns3nWhPc+wy1Mrfz
      PiEIDIuoIXkpm8DcFea8OyV8HyEddz9ChyHaqVGuFZlwqiit0Ro8FXLfq/NLHXI/lFhSIITG
      U8/miKmmJrIzbGUvcR+P2PeDuVHw0bMn780itwGnNXlsBVKrEMIAo6OPQiZDurClzTc/NWe+
      UK+nbow1VxeRW8S6+hHhdwYfy2Yv148sraVb+dncA8TCJKXWrz538f1aayjnkCcu7vlOtXRy
      Y2qWU4ktn0IlCLHE3tFsNU3+dO4m/84PKZfyBN3D/F29zLlSAdkzwsOufrzOAYRpkbr3Ccb4
      JO3GAFp/WXm1D0eTJrf/fdRnDopR2x/mptx4ABPsDXU4uEnaf4xc/E4dzGb26UihBGxPmb1V
      RywUFO3oJoPFJ8fprluMr8whugaOX+86hGGS/+ofNdvxuN7fLwlaKVRxBfPlb+0rmul4hkBr
      4tvOQfusVKfHMhmK7N14UgoCAtPE/Op3mxdOvMiDepnM5KeMLX5CozLOomNyciEgZnZjiC//
      bIXDcLyJ+XBsjzHajn3Xt8ddVqzAh9X5Y6U2F/EUWBEid76gQx9s+fDLy5hXft2UfQsrxJeW
      SZgpop9/iA6fbKCEEIjY0Q8H/LKhVdNzrJanCCauHRiFavQM0xndmv0vO4LPR9/mWjXEkltD
      q7WmHIT8kCje6Iubh0fI+5/S+tFf8q9XfsAfuV/wndwvObf2kISMYBySR/U3uSZsaYUHB8jt
      vH9rg8/2n4NoWe738OOio6Q58/4VWJg69rN+Kk3jkOOyO6M9nF5wsT/4MQMfX6ZHtGAIg2zF
      RS0csBnmtxEztxArU5z49N/ylbn/iH3m0oG3imwX1d4x6mHIA1/ysxf+kOq5t1Gp9h2E4mnN
      vzdTFL/z57BuBtVa0z57FT+WZTpMoLRGqhDXOP6+2i8Xe40vm76KQ586mn5g/Jd/9K++16g4
      B96wvdJH3iMEpjSp4OH3HUMsCXxo66KUtGidX1mP298OjSENDCFJVz3SOrKZRs8QkvrSffzB
      E78VWxUPgg4D8F38z36K7Zb4/cRtrvijSNPEj2Rgn3AFISWrPWN8KjNcG36doKUTVueoGTav
      VVe34nu05krPGMqOIWbvodv7ECqkUavjXvxdnNmHyHIRKTXzJYO42XOo62c7LRyJLnbdcxQC
      Pk75T4IjqfjHbUQit4J58wr2vRtot3GoZ1NrjXZqqFqZsL2Lot6d32XnsxEjuu26Jm4myDhi
      yzr0WwphmM2zlFNt6Aef05nS/Bddt/lv1N8gyysHPycN/MGzKGkQvfwj+i7/A/XeUSa3SaEa
      8GsVYouTGK3NUzhbHn7Gv5n/AW2TlxkRVc7FFVEF6fXY/gPr2xbZuv3zfvftJ34ch5YOE12e
      Fr4UG1ena3NuYpXTd+cZ/oefYN86JKuz1gT3PofAA9MiiG6PknzUyzeZwBCScPbpHa73zCAk
      xvA5jGiM1SrYJnxUHSJoH37ko/LznzF68320aSGiCT7tHtvs80oY0rDjlEfO43X0o7XmxMIV
      3DDkPxv/Gy64zcNPWkxIify2TN27mncA8e5HpNsFj+3M8Mgu2HPfbml+b1nHKX83Do0G3eDA
      42rjG1GEAkHWiJOYmOchPo2TZxG7vZwqJJi8g8i0Y3T2E/UCOKZPImWlsfOraKd+LCfc8wYR
      SyDpwtE2txYFfqhZ8aKI0IdHZFcYcCq8Ebr8uJJHzd4jmLiOSsf4SSTDZGcvjF5ARJp9o7Wm
      qEJ0XFNVgjUlcF1Jl4QGEaZqi6StOK12ZttZDntx8HbY7ZBsyfGPiijevndi48p+TrCd9+ws
      4Shm0K3QiSPpAI/DWdsbIIWkda1OdHqSqqnQ5QJaq2aOSWlgDp3GaOuh5doVuutH3+y8AUva
      tIQ2i2sPkN1Dz/2hFPtBa40u55ArUyjPoTMp+UpvlRfTOWbzIaWWU4c+L1ZnieVmKcRTjDz8
      grVsB3kzzvWxS7gjL+zUj7QiPf4hr8aKtEY0bRFNe0zzj/kBAvtlYnaaAEHJLZC21s/bPcbs
      vfUjd3y7nawPen5vwBtUgzrzjRwKhS2sbUwp9vnd25rd9W2/dmQleOfDx4cUkpg2aFteo2up
      QHxikkJnuhnQNn6LvivX6K0cP7Xd9vLjpQrG5D2cWgHd0XO0DNLPC+oVhj74n/n9yDVEsoW8
      Z7NSNxmO1wjqNcZbLh0aUVpbnSVamWQyO0xOQfXC11gaewWEbIZir86RenALN5HCvvwebcUI
      46U4A/E8toT71Tj58AKWEdnM3Ff3q7TYqQPGfH+5f/t1sUfC3k3cO+P5t9cTqJBVt8CqV2NF
      hRBtp6wFOqiSMuPs9BLvZq6tsvZbL7bXZG49sIXtdtfHxUEKzIaFJyLFZtCXsONkPfFYiY02
      IIWkNdpOViuYmiR/6kJzJXiuTHr7Qz/4lBfDG/R2B+QdQU0q5ttfpRIVvFD9S17L5qhM/Hs+
      HPvXBzKBMfoip7yf0SHmuN51kROLP2RiqoXKqd+le+IeFxcKRITJzOw/oOp+08+qE9wpttAa
      rfJ5YZhMbKf4aJsJKn6d1J6EwtuJ7OAYsa0tsruV4d1jIkDDmleioTzqGmo6JBbrBASR9TE0
      jQiL9QXKfpUOO0PGTjPdWMUPG5xJjWyj250Bc3t3DmyI9KKpA2xxyMangySoLdVGIHCUxFMG
      aXP/o3QOWy0iMorMz6PjSXRnF666sycX5XGx8WK9Rjvq5z+kcPE15MjRM0k/K+hqiUttD+nr
      NwhCyeXqy5iZQdxKjkpgI4RLe30GWSuiU1tbOlWlgLX0kLbifVpVDlsGvNmS45L6OZEkrNZW
      +fBDyeloP2K9b4fJQnxrXCYakhk/Qza+Nwo2ZiVZaiwRMUzszXyqu2dYveP6YRPnBtHpXUQq
      1hMGTDirJJNDSGESE/vQj4BEagSlAx7W5okEDaxoOypsUPQrZK3UJnVuMEKT8di3XQKQW4vE
      9oXhIK17L+c62iDUe2Owd7PQbseERtFx92P03asgJN4T707eiiI1pMmQ7MRcOdpJhM8cY5f4
      8GEzdaFhCEzlQm6OP1n9d4xkmuLp2Y6QM5N/TyQ/BYDWitjlH/BnN/6SF3Kf8922h4y1KUwJ
      kXXTRsrWtJjb84HuHcOUYaMPmKcafpWYkFjCWo8IlTtEj512HrkPjexHM/v7ETzlYwiTMPTX
      jSA79zJvMo3QSGmQSg5ixzsRUmJYCWZDl0CF26hVsmHk3G8i3rUpfj8T0pZisZHnc/c9ERFi
      CbWHAfaraE8nCElMdyFGz0Lg0cgebr15lGdvX2eLd8gBbM8JtNZE7v+Kt0/41Fz4p/lOSulR
      IhGTtqQgZjXfxTbhj9vv07V2HQArv8gr5Qk8pbHjel9JL2pprOjq+l/7j9GS72JJCydw9piq
      Ax1QD+osNFYp+eU9z4pttLH72gZDHGye3JpUBYKiX8WKtmFZW2bwnWOtdz++A4adZsHNH0Af
      B69KO7weW0vT3iVuYykRm2atpnidNXYS2fbKH+XEyHoW7uUPqHZlSRXKYGQPLGs3DhTStKYq
      fZRZQcbaCfTjK9a/KTgyzvvFIaaMt3DGzoFWxGc+YdLIUqqvcaK9+a4fzceYHnsT6dYJPvhb
      2lSNJVPzWvd6pOw+hGbZdXT9YFXI1AGuX8IWJtWghBMGaJpKcEwadKeGMDBYrC+RsTL79uVh
      oq7WmsnGEg3lY0uTLiuzTaeQ65mpFb72QR2dcHdDCklBCDrCBoYwN8+VaJayj7l2nS7MrYq2
      y296GxvstzJsNW53f2xXdh7pyRPQUVS0FJYxZWqbcvKY0DCd0hRff4ehT35F4ARPUtpvBEII
      5MVvcZdvrZ/LDFoLnOwA5toVhG3yySwY8QTlaJbW+x8zlL/Kxd4iSUtzeVFiG3tnSaUFUwVJ
      OSjSCFZoNdt3HCO6gf5ICysIklYC2DrGaON4RHM9W1wmkmWhsUJfrGuz3QdBo0GDr30eOjlC
      uwXDsAi0ZsorYznLpKwURR0SKJ9uI4otDGRQg0j2wHIfBdvOcKc2j0DSYUapoRiwM8SMyE6a
      bDaPip/b7QjbyQT72U+3a/a7X3v7fft93jccVUhsEdlxz37izPZn12yPsCNJteogpQ2GieH6
      NDJJ6ucvYuSWEKUqwWuvbcbDPM/YTkxahei1JRL5cT5KfI21rovNVPTxNNQrfONX/ytnq2Vu
      O5LB3oCkvbdPvRCuzgteaAsZGQopNK5ydb6dwO1g0B7Y4dwqhA6WtTNTXvPcAHZcS5hx0Jol
      ZxWtNSkrQcKM73GUNYlfM+Us4wYNglg3pmFtlmvZaZQVpwSY0sIEcoELQmDYj0/8zfIl8WQz
      Bq2KXl99VhmLtWNt2yBUDUp02Mt8rQvEj/7ip7owX2QrKmKnbbb5735EvEvJ1YpGUCduHbyf
      9ahxHbsJflMc05o8Jea+9e0modTKxK99ht83Snj+4nqko6blV+/Smi8yrYt47V3IEy8i+keO
      VPezhlYKtAIpEUISLE7Rdvd96qOv8PXP/iNnVRkhBL7WzAH3fck7Lyha481DRzbG7NYinG5R
      bGwV0FqTq0suj/eQMXoAH0/beFaauBlnfz1wfyitcEKHolekL9qFIY0ddBGogBtuAcuMYxrR
      ZyaCNnUaTdhYRSmX4Wg7glVeTDcYTa4z5fv/21/o6vyGtWR/M9ZOh4Pe9f9GZYpiAEXVhSUj
      2OthtaEOmQmWMNMdtDY0cR6953Y/0UlrzWqbohaLklqsEfc1C+1Raq+/A6tL0N2PMC3CqTuM
      fn6TrJUh1CGBCrjXJlBf+TZin4jK5xWivEZi5iZeIsvYrXd5uzFHhL3KrtKapQAavZIL/Vt9
      5gVwdVYgXY0ZADYkfMEwirVQ4GvBdaeFSOLV9dlRotYP/DPlI/KlrWOxvkRfrBMpdu7nrgZ1
      HoYBEfvLyxp3HGitWarNg6jyPw1bmFI0sxEiMF9ImZht69ywafnZuwqw44rcI6pspEQs+aus
      uIoH9QgVX/DQjtF462vInlEq1z+lb2qOtDg868F+K0WVAumaQUdeUvZr+ImQWlsfwo7C+uyu
      tSY5PUvKTG4U1Byc+Xvo6huI7LPf83tkTN/iu3f+nrRQGGzM7rvRvG4I6M5qvBDsdTF/oSRo
      XVBkUZgI7iiT7rTmTphGy3YyZguWUaPo5BDCQCPw/DI9doKcUrTF+g6dub3QI1DBvquGJUx0
      UEJb8T2nvz8LLNcXmTdstOjgf1lY43fSARdSNoh9g+EeLaZs6AEbivIGBIKMZZCxDGRc8jcj
      X8PtGCY68QVe5yDu2FnmbZvk/cVDg6x2ox7WcHQVs2wQmjZpK0upXkSvH7+pi6vNIDjTpjY0
      zLUhhWg0MMY/RRsWiYZJZWEGfosYQJ3/Cv9n1zC9X/yY75buYW+bYZtYt3BoWNaStUnIuYIW
      S+N4GtnQnDI0lhC4GsLYEHUjS18kiiUN3DDElJpzkXYCHWIIgY6myXtFRuwYS0GNxAF5P53Q
      YTlYpD+2/2k5EcNmLJJlzsmhoh1oFEoFSCGRT+jsPCq0Vjh+BXNdAdaGhdaaq6qNa2s+/6Ms
      cDph7WSAp7UH01eavOcwMvkpow8/wPbq/FoEJAIXJ79MzZekjqHwmJicMDy+0SX4wfIaWvSR
      NFIYtz4hdGoQTWAtL+AbEnnyQvNdGlWCaATZPUjtzjUYPDyF+vMGIQ3oHGDh9T/hwS/+LeeD
      wr733fIkoy3NDeQpCXd9yflTguqqZmoJLAXz2mDITtBux5vZ5FTIg0aFrkg3QjRPfdyAxsAL
      Ayp+hbWYQbU0z+n4KBpNDZ/FnhbymXb67lcx1cGHU8fNGC1hg1lvjdrZUwSmRAYeHeMrGE/5
      3LD94AQ17vgVhFdBrR+yt9FWbdi8V5KcThwQDq132M4Pit/Yja2ACkvC61GT16k0v4oZROY/
      46bdjuWUWW5NkXc02YYkbkhsuf+e3qbJqqnNn0iEGMJCESJ0M6aos1hH3P2AWqadxuIitPWg
      R883k/HGkhgj6wdQvPL2l7Px4TcAke3g3dO/x+mbf7We+mTnCt1rKK47Jn19IEzB77dD1IJK
      i8HlhsFgw2cw2UJ/qsJ40cETDrGYAjm857AJrdd1LR2gMp3Mfu3riNIa41/8ikjZZ/rF8xhn
      LmEuz9MWRDEOCTb0VUDVEjiXLqF7TmAgUMtzBPcXkMJGiObYKt08aF0Iuc3C+OQo+VXCzROO
      dkY5oMEWEoGxxQC7Z/7tXkEh9iq963exRfhiG6s079+Q5euh5oexPsqDL/LtB+/xChX+wzt/
      SHVyis77ZdotjVw/JVwgcIIaQVhBoBFCMxgpMRhrLp2n4jXeo4bXliQy6ZOqt2L4FuXTl+CF
      1597p9fjQCSyLISCQXMvgWQNaM3C+UG5RVRK8lfq92n01liausoZI8q1UpyY6VMLPb7VH+Vn
      E0soPbrHh9tqpyk3cswNd0EihTJNGuleRv2AysMJCnMzdDkWGWOneLQ95kZrzUxCM//VPwQ7
      hi4XsD/5EMtzCcQyoZcBESHnVaigiQqDXitD3E4+MROU3DXyfg1HBShpbyYA2PIDSAQw4xn8
      pxX/UenRd2N/b+MGdgc7bTBVPVS4fWN8Y+oT3rAVhUChayVEKkHKyCEApRQhIY0wzzczVbqj
      W3xrSptAwd/kHZZPvs5qsp3hq7dppHuYPDEMAyf2brT5/xDSbol+Y/9VUgrwHc3DSpxVneHl
      xBK2oTGkovzqd6gGAcNrD3HpJ1QW9XAWTYE3B13em75NuzpN1LDRWrPmV4lKm7XhEfzTrzRH
      MxKjeu4C1xYXcE99E2laLOWXsW7doL8UrutyWyEPG6EIq53tsL4BR97+jHTdQxIl0N1YdoKl
      2gIFu+l/qAITocOw65OMZPZ9z6NAa00QuKya8U2nYvO62hJ/CEBIpmU70+5GKMQuut6YSTb+
      P7TSA/WGbdYkIQhau2mf/AgjJqgIwdsTv+aOMUTcAD9WJTUQkMrGsRYUg85OgaX2/7b3Zk9y
      XNmZ5+8uvsSa+459JQkCBNciWWQVS6WtSjKpNZpFZvMw8zYP/T4zj/0/jNnYPM3I2vqhR6Me
      SS1Nl7pVVaJqr+JWVVxAEjuQQO4ZmRkZiy/33nnwiMgtEkiAABEg8qPBQGR6uHu433PvOed+
      5zvG8X8NPcvi8+cRhTKysc7MwFWSF15HFMs7L/04orbK4Yu/yCRiTMxccRgjJJFfYHjms00O
      psM6uBoMEiRNxmyd27ln+JeR72LKI1Qv/SW/W/6cP3Y/5G9m8iy8+Pvc/PRHpJ99zlhwmkrc
      YC225LRgPA+LlWVcLFBCMuznWE7XmRs6ukWhTgyOEg2Odu7ADo9z7Y1h1n71LxyY/hxPj+PL
      EK9VTyyFZOzKdW6eeSE7z4tvYb/3D2jh4XeCYNHJJjpSUqW4kTYZqtexCDSOodzYrskS10rZ
      bs8yFfwSKtnw+zeOd52/hdjoDJPRobvxO1o/2/jdbjP/bjvGm44QAuX5zOUHeNatcFQrqtUV
      FuplFkhwosHL0xUG5hRlLXdc6h2XY/GpNxAtrRuRK5J+4w97nuZwL5i88BP+h/g6uv1m6pcy
      kVvnuBVH3NRlmnGMb2PW/SI//MP/GeccavYq9sApnLPoT37Gh95xvhZfZjSf8vrq2/zHsRe4
      cupNkliyfHOGb41c5u8uDtCnR5nqX2EqKBPIjInqgMtDRTh57q73K5Rm+dXfwVzK8+aF/4C2
      jsvRUbTMk/MmKekwa4Ke0zjPp3LuGYqfXCSfeq1Bm709lVQxQuB0jkTnmGm7QM5h6rcZL0x1
      jnXOsdJcRJKpkCfKJwCMA5wlkCozDOVv3V13Gxkzic6YrW1Vkf/1v/mzf6PqO3txdfnKu/78
      zpkjgXOCDwn5+to1+iXE1vE3zTzT516gWHb8QXSbI4Eip3aWQzoHnxvJjaAfWRrc5RqPP5qN
      GvrSB8w1IgbCAE/KjB4tBP2+ZqJUZKqvDz9X4rYqcv3E1xBegOsfASmRy7Mc++Rt5r7251yq
      D3A8/pzDhRpyYZqFhsQ88ybxyae5tZgiKwG+1azXCxSV1wmGbzSWWSRm5cSzGxPgWoXhz39L
      cfYGZn2VpNTXWR2EEERDBxlf/JxnmedkuMSkN8entZS8GKSxMk/j4OEsKTEwwtKF97lWXUbb
      JjhH3UYYazBK4ifr2M19ygQ406BfFZBSYa1huT7NqvRo6jypCnA6T6JCjA6xukDkDEtxlaTd
      XNGBsxnxRyA7wXY7LthEhuuOzQSivWAzm7TzLYCSkvxPM++RU9nPPCF4Kxchr7/NSW3pVsI7
      3Yj5rJFwLejnxuHziEcpW/4lwHghR5sV5oRHMtjNDxZULPykdIQPn/vaDhFdJyVzwyMgFctT
      L/PvFkq8uPR9Xi1d4ng0zd/faDI/9Sr1Q88xdOMX5GWKkLOsyIukQrIaFemTRU5aTe3Hf41f
      GMEKzfO3ZxkTWSf4yM5y8eolrkwdpFEqIpOU8uoKeiHH++YEqV1lJtHUSIniVZipI25exh06
      kdE3pg4zd3EOS52yWcPKgDTox2FI0ggdVbBeCdeqeqvpIrP12xRVnmXbpGkaCBOjbYLy+zou
      uktrRGmTdTQ2HMqqDncIK7Sp21uxwwDay0W3JWS3DMud+dfZZ3JqY6UQAs4EAnaJ+BMLH5Pj
      Fy/+CW7kQPeewl8xCGuQQKJ8ylptSkVnzzK1lr8afp6Z069nggJRAxFsTApjyx/xu/2f8O+S
      GPyA6shT/HPpIJev/CP/dfFXnG98wCe/vsL00Kt4OmSw8DP6S4IP1opcPfAmDas4cuHXjBRS
      ntKSgenbDHt5kJr2Owyk4tkEzlybxjibVQIIifCHsW6I96oVJoMSH1lD4GdGnP/oI6qFImp4
      Ak8JhlWEkB7V3EjnvAJBGpRJHeSSKsYfwGFAKhaCPlaiVWS8gnNg/RLaJggsSWORxBoaMsDo
      YivwFSC6D/Zu2HUFyHjam17QrovAXnaOHRtpUdHldxurzM8q66QObhx9GSaO9qSf76yFqI7I
      Fe86OezpfM5x7OZvSXHYoPtK92sbcvvEK2AMxXe+R/XYczA81YmL6jLPXFXDJhFdERa48dSf
      8TcXBUrC9KlvQlhk5fMfcHawzqrxuHjodzAHnkbM32RABZyr9SPqgAe0sno7a0NAd+gw2U8k
      gpy0fFibISXjKAkhaUxNIYcyMa7CgUM0L31Gk/yWz3akUwQkMkTHqxivmAXUaRNjU6zOo1Eo
      68D3iepzrAVD2YgSouXGbb3fvWDPaVDnNhtBd9Jc68i7/Hz3gpmlOOVSLaJ/dIpbp1/rycEP
      rcHeSrvauevgHHLscGcw3jOcpVlZwANCsd2YWrOvs4iojm3UWH/5D5FSbZmVqgPH+EH/kY10
      n3PgLK5ZZ1X247smopzVE1ef/y6/+PVNRrwm/XP/wlKuhOgb5FZgOY9DIdg+UWV3spn71fq7
      NU8KIZBS4xemSKJF8l6BSmMGc+j1TowhhyfJnzhN8/I0ONNivXpsHrRG5zBW4yVrOJ3HSh+o
      EfmDKLJVB+GjlEEnNWLdbra+t1m/ndRsP7quBtDZOHCb/r/L49j6KHa9ZJef7P6ZtTBkpnyg
      t5mbmwaeHDmAaNGBzfRF1H20QRVSMX/mG6S/uIrW23x7B6up5b9MvQj5DFq2MAAAIABJREFU
      MjK/S9p3YCJredRyncqffp/nxWekzSbvyzMsP/U7nTcW6RzX9CQFe4OcFpiZa8iTg9TyZRr1
      lKLqIsXuNjhgG65sK3WEwzpHTgik0AwWDwPQF47RqFdbefhWgsOklJJ1JqSHh+BGtEJTecQq
      1xpSFiTEXh7dXEF6+Uw7Slh0XAXnSMMxrC6gkipyc8p+DzGrELTYBdm/O0+7fZJO9N/e1HDb
      Z+47zf73js03W1ASE1nqT32tZ2f/7ehkRBDI4an7Pk8Ulvn+wVeQ5T5O1LNVZT5OaQqP7514
      i5WpZ8A5XL1KuraCWV1GBQFJtYpMIzxPMzBboZbTpGfOs3b8TT6eLXC6/iMap9/MWLMtyMFx
      bp39Vxz44P9g+ti3QCjM9EVqh8/ww3ff5pXiOCPC54ZIGLeKnPCo2ZiGS2mSYlJHxRiKUvHb
      JKKWNpC6jLIRvlylT4/inMNTAeMfXKRye47k1ClMFFFcX2YiHEarAHD0M0w9qXExWmJd5zoB
      sJfWQPlgE7DZbJ8GA+hohaBxG5nU0crDCk2i81lcRHt0iq4s1GzUWjo5X0Cs/NVfOj0/s3uA
      u4MS0e24nW7NzhqCrb/vnHPT+VLr+L9vr/Dpm3+Bmjja9X6+6nDWcvKXf83MgWdZHz0KUoLy
      MEuzVH/7HlFlBeMkDkm7ShtgIK5ytniEKGxy69vfwSqNwGHXlpHloR1BnHMOKnPYqI4cmsQ1
      1kEqzGfvEB4+w+C1Syw8c57Swgwj7/2Sa4ePEBw+Qv2f/iPTqh+kh3QC4RIOCI0flAFL2qww
      qIsEXn7L2EltnKUipUagWjN2u5bZkdqET+szrPjFbKaXGtOqKcnc72xAe80VlDXkwyGEyoGL
      qUarxF4JldZIVABCIYQGttaDZ2Nva+JFg9hTALf1mO6UiG6lNNt/eqc64ZoxzOf6Nhy1JxEm
      5cMliUynYW4ZqQVRs0n1xgxWKtqb953ajdajskJkQWNDYpfmEGMHAIEoDXTNYAghYHAceesi
      6t3/lO3WH3seffZNTJBjYSRbzdaadaq3rjFXrzJ89BTzqgzKR5DFIMIkKBkgyNxAFfSz1lhg
      xMtvGTOezGXuWWvwt9F2q5TQSBPjRWtYHeJU2BoHouW22E4z8yQoI+JlcrkxhPQoB/2kSQ0d
      DNKs36YajrS+8tbgfTM/rf3vuwbBuxvHbuS4vWG7n7aeGv4mnKJy7uuogdE9n+erBjt9BRFL
      3GIdqJE6R6O5hN1SXbU56Mtm4XFdQjjFwlgJVyxtrL93a9A9eRwzehhwCO3vfN/5MslLr5Pr
      G8azlpN2nU9la3A7Q9Ek6CBs3ZUkTdYZCgZ2XKYTA2z5Ftms7rDUknWqXhGjg02f2RTQ45Bp
      PSu/lBolVGcEChXiqRCbrhPpjQYfG/tSu8ur3CMZbuPW6ZxcdP69eXbPftPdILYP/tnE8m+P
      vEVt8gTyMW5ycTc4k4JUXScVl8TEH32AuzYNIqttzpZ+hXDQLlPfeN6t5yhAGEO5VdhemF2i
      Nnwdd/xMdsQumal27bFQW1On2yFyBbzXfw/tHKUf/x1XCRAIgmiFQZWnkJ/ouCcOgdIhzaSB
      p3JbsobOGaDbd88yQMYZrNCtY1tkyk3HCufwkxpJbqTjFmXBt+msKlFcJfb7W6Mxc3e2q9Bt
      h/7ekmNoucnzff6WZmu7o9um1/2FrM45Powd/+XU71KbPHlPuXRnLcTNx0YO3ZkUuzSDHDnQ
      9ffJuz/Dzax2Bj+0ZkCbEgiIW/yVripnKsdn0SLnVEi/7Kf57q8Rn9/EKElzYhhz5vwWxWw3
      P0P+Nx9CnNI4ewo3fhDh32XiiRtw4yPKcoTTpsaYDvlc59j67gVCampSYJqL9IdDnd+3X+32
      fZNs0pR4wkeQGQnCdYJa16Ix6HiVJDfcMmhB5BcR9Tl0OISVEukcmCbCGVx7AtkDtVovy0E+
      1Clvz6xx0mtyJhcTyOzjP1zReMrjjwcNo8HelJbbq8BehvJaavnH079HffLUvZuQEOCHdz+u
      RyCURo12bxtlqiskc0sd4WDXmvHTqELdJi1mY/fBn50c1r0y041ZitInnxtHGQ0GitdWmXXv
      wdPPZTvHzpH/+GP6GxrQFN+/SM28x/KhcSiV8Q8cRRb6MLU1ouuX8PoH0ROH8a99hEwEfzZ0
      hA/qs3ziDCvpOn6yRskr4+l852a0V6RJlcTEeK1sT4b2bNwqfnGis3sbqjx+Y544N5LN4EIC
      FpXWUaaBlR6becdOeiA9lPKxzmCcJBEKJ2S2i7xHd1zjDOErL7Nyc4bPryzwecN23BjhZSvC
      v12u8t8PVJgI9+YxtW+zYSw161hJDc45QiGYCr3OxslVp6mPHN7TOXdcQ4iuwd3jCLu2gjDg
      RLaaShTOJkQuxfj9WbB5t5MIwapNyasQtUnVQQnJxPV16lf+C42RPtLTJ9CbSgu0DFCJZOnK
      LEIuIH/7CUEpT1xrYpyH4DKB+CkD0RInwxwShS80K14BhCR2jmXToBxF5IIBIJt9lczRTOpI
      oVqUZgnCtL5L2y+34DL3RUmPw34fn1uDkCqLcJI6QgjSYJDMwdrwNoSN0ToEIZEILIbQ70NE
      yzRUphXl9lB/rJ0WrH52BY6dwF6ZRolgkw+VDeamLPH9lTX+q2HD9yuOMV/wtfLmoCbjqL+/
      HjObG2AQQ840IIr4h/JxzMtvZdPa+grHr75P3DfEf7v4EavrNcLmOs2vsN+/G5y1Hf9cmgTZ
      znQkdVIcNQfpLlKEu6GBI+wSgEohKeoSxYrF/OwjpPC2eC6pTbMdWSGwIqRRs0BLNcGlxFYx
      pwap2CZJvMIlLJ0TCIHTeVZNTNpcoOBnjN3BeJWZItSfPUbu0nXKtXZMwxbXJHN1JM5ZZpuL
      SL8MKUgs0jRJwkGss0gpyFR8BcI58mkDFY7Q5v5IBMIThDYhsDHWOWoiIW0ZSXatrSl95xza
      vfgy8u0fk174gKgAudpWDlD74OtM8r/PVWiqPqg7yvImz5QCQLAUp3zkQn78/HdJRw9lL7ex
      jl6eIc2XIVfKXmShj8tjh3HO8Te/afDfcZkLl95l9vk/2PNLflxhl2czFyTIgTHY2WuoQ0+h
      Fm4R/eYTsFCPK8SqiBOyNQveG2IVEqc1Qm/3IiEldwa8gQogbYDe6VKmaEb8KktNzQci4+xY
      vwtbVfnUpKYRLSCcA5dQGDnM+uGniaRH8f3PkEKxkUBpT7MOgURKxVRujMtpDasCnPRI/TLO
      pq3PZcYjHATJOjoYyGIFWmG0EOAUuATlF1HSp5w2aUZrNLw8dtNqIKCTatdmaQZjU4KVCPft
      b1G88hvWr621grENCCGJvaEO2+KHtQEO5tbxpeAv3QBrb/x5pw2PkBIKZdJCuetLFEKwrDLO
      ++naHDOPgYDtF4YQiLkbOO3h8mUI8qT/9O9pLK5j8bGmTuT3I5R3/7vgUu3a4O5+4YQiwWdk
      vEAz9Umrdzi/kNiWtue8c4jbFQprS4iDJ1iYnmZooY5H5t60mDZb3vtAMMQxE3NReq3xZ7IR
      j2gN/CrCWcKgv9PveMvlhUCFI7hkHZeugPAJvRKBaRAnDVKXop1hXJdIMcybBlKNH4GxKVJp
      sb/6GWtPv0JhqtDZeNht02pF9PH+mmElMVSOnLvnHr1rU09xpZly1tRgdYHk4q9JLrxzT13m
      HyeI/hE4dhYOnkYMjNK4+Ckzq4pFr49lnWNd+eh4DewX6Hpv0y49lr84VpKA9NhZwldeRxDf
      tUwWyFwjF1D78Y9wUYP4tbeYeekMK6pB1TSYYY41P9qxP+CrEC+p7jidSqqEXokwNwpqc1nl
      tr0FIZB+CRkMIaVG2BQpBKHOU5AeeeEhRSbe1Sd9JEKgzjwP3/lTkJr48gVq514jNQ3aOdnu
      RiD5SXOUf1jywNz7S7OD4/xw/Cw163DWZdQHKbN2qV9BtHPlQgiqv/4lldk1pIkI4jWCZC3j
      uIdD6LQOSX1vg2wbPJug1YPPjDmhiK5eRpQGCI4f3PsKJQQuFtiff4/gyqeIqSOs/d4fsPjW
      q9QPH2blwARNU8fYtCVkVeOiqZF45WzX2NmOe5N6RdJ4eRMh7w5ZMbLnLb0CKhxABsNI5SOk
      T8MlLJGyEpZJcsMb/FHhBxhl8W5MkwqFffMNUrY3rd7yWHAqz01GEUMTe30kW3Dr9Ov8+/EX
      EP3DuMpillX46Oe4eO9N+x47WEs6czvLXtg4m6nCYURuHCE1wiui42VEc+meV8PEK7FYn+nk
      0B8kaguruIXbeM+8gNb3MEkJhZpfpbiynH0fL6B46xaDFz7HHTrK7B+8xfVXT3P97BQLh/vJ
      PfMUg+dOMPjcCUZffZ5AR9n3EdBQAc402W3faXsDlc7/C0CHGbNUBUTCJ2pWSOpzqO/+6//l
      36wamUUYw2Oo6iLm+iXk0y/iRoYRs7cRhk38k00XdA4rmojn70+PR0hF2i7qEGBXltCTR7FL
      M4ggh7jDDuXjCOcc9fd/ytpCLctcpA2Uzm9N57qUBIENBpDJGuBanPm9YU0o6s0FyjqrpQWy
      3dI7SFGmpsmCTRF3EMV1TmCWZ8mdOgNhgJ2f7fSzuFuSNpYh1eocQ9O3CT/7mKm5OpFN8avr
      xKFGTBxBDI7C1GG88QPo4XH00DiybwivkCO98Qm5JCJAonTuDve5ne6wbRdYKIxpYPxyxla1
      8SYDAIQf4iaPYirzyJEJZGkAO9AHN28i3VZfrcO3CCTi1N4b0TnnEHPTyA/fQV/6FO/K5yRx
      FcqDqMkjiCCPXbwNOIQXPJY9f3fFeoXFd97DSQ9pIjznECrcsZ/hTJQRwnSIsAkyqYEK9rTv
      IW1M7FKW0hpJWiOKVrgarxKlVXLSR4qdcoZ7MQCEgCQid+gQenQSZyPShUrXibHbZ6318Ksr
      lBNomDp5f4hSoumbWaYWr2LGxrtOoqo8SHDoGOHSLBgLqrhFudDtNth33gQgcGmdVAXIdB2X
      1rqU0EiJfuHNjYxOuR8zPrjtYptOmgpcHO16WecySq5r1gGwS7fhwq+JXULkWcIgz/jHlxn4
      x7/DXXgvu/7RM1lGY3WR9OrHuPuIMXoOzrH2wbsYmfno0kSgCzsHtVBb2LBW50n9EiJeAXMH
      18MZRLyCAZJggKZf5rbKccOlNLwCM7rAR9ESM43bpHb7eQQqXkVGlTv+sc0alf/8/+KSCD08
      Ai5hrzuuQiqWwn4+93JckprINlsbYJqhq3NQ38XdFgJZHkQM9WFbquIqntt2UJtWfQc4IF1D
      Jqv4Xkzh8CSqf3gPZDgh0eMjuJkKO0vOHNIokplrqMOnd3zUXL+E/PA3EDkS0cT707/IuOdv
      TSJXlxBhnpUgh12exfvtuxy6eJP6bIWVI4dwEwcws9fQk8fBJPA4Nb3uAmcSxNI0uWjTJtBu
      TE23zeCFIvX7UWmWBnTb8vUibeBsROL3dTZ9sl8IrFdCpXVSr0TqFbjpHHONOSaEZiQcRkkP
      gcT6Jay+O68qtZbk5iW8qWNIJTAuI53ttQg9m7kNfksgN7ExiyfGIL97LwEhBO78W8jox6SN
      CH/iCNHt+ia3bnNzl+6G4GRM7o/+NKs09PzMsH79o7vftfAD0lqzc/52Vmhjp9giPv4MF20N
      XJ1zqOnreKmHLzXqyKEOE1IIgewfzjaFrEUWypjXvs2tyX6Mp8ldvwGLc6T1BvbWJeyVz7Cr
      S/eVGekVCO1TfunrEAxAOAzh8K5++XbR2uwEAqNLOAyyuQQuI4yJtIbFkfr9Wwd/C05qRMug
      2izLxCtyQ/l8XJ9hvn6b+Wget8emGAiJi2NEkCP32mtIj70H3c4ikhoDJsVXIdZZbh3tIzly
      /K4xpPB8/Ne/Rf7bf4hrFdlDOxG6tehlR3MVUvTJk4h8CRGEmU6REPjnvr43OrQ8fY4kidFX
      bgGKLLBus/wEumFIfvsO4plziHwJuzyPW7iNv7AKaExag+Gnd37JJAJapDYhMGdfZSXMuOZ2
      8TbB/BXWfnOJscIh4o8/Ijp+Au/cy9jVRWR5MPt8kL+vAPxRIPXClv96lwN3y+ULgdGFjHZc
      n8XpgFQXcNuawO2AM52t/w0Kg6Tpl7huYqQKcV12iHdDtFzBdw49doDw2Rrr732IEDslMp2z
      EFexNgYckyJgKBgkCLNqsapuko6fQhb3JpXfpo447dN9pt9aeSgQiEAQvvl7yNLOawil92YA
      Qmt47mskh5aQqyu4Ty+gG+lGbltK/OkKbuZfsDZGGwm2gTER2hn6+/IsdGFCbq5TtfUqyacf
      oCYPo8cPkxqQEyfJl8doSI3f34c2FtdYJ7r8Cf6Bo+Assm8YlyaIXPGRZ42cMa3eXt1HuOwf
      Rtio4/rsFjyKu2yGWZ0HE2O9Ak56mzjvu6QHO1SC7ivLPVXgOUftxk2I/4HSN/8Y7+BxwuVl
      oktXEDZtGbhCSI+GaZLoAqgc4EhMhK9yRKbBwsF+omdfQ4T3LnimRieJzQcIvSGI3KZViw7J
      zqKmxgjOnod8addz7bkgRgiBGhyGwWE4cJD42kXk9euotQZSeFnBQ2qytppKkNpMISAnJWri
      CPgBtllH+EHXKiWZLxG88I3Ov8OxVveRFoMqZcPTy7/0Vuc45yyuutITzFC7Mo+LGshiP6LY
      t+N7mtkbuGQN0nXw+7Ayq1vdQFblJaTAubTl0mT0YbYdJZzFCcVGXW33jSGZNrLywgcAh0OZ
      Bs4a1udXKSzPIgfH8YcGsFfrVCgg2mxQG5Pq4sZ7cbBcUHC0j2TgKEweue+VW+QKyLyPi7sJ
      M2c0CzE1iv/KG3cdF/dVESa8AH3yWdyJM5iVReIbV0Fr5MQk4vYt5KcXcSZC6wI1F7M8fQUz
      M7uR4Rgbxnvu1b2lOO/mGwoJpQHcyjxiYOx+vs4DgxwcB2sy4ltxK2HMOUcyc4soHADn8JIV
      hC4hkvUN8VbRmsetwenchivU2hVFgErrCJdRp61orxQbHRnY9BNhY7Ap1t+YAbf4x9bgRcsZ
      5ZoNt2HLfW+prAJMA+NnPZ3r7/yQwht/hJo6Tvzb97GRpF2m2aEit4LkUKeUvvVd0mL//XOd
      2t9NSPTUBMmV+W3jwyF9hzp7Fn3w7nEF3HdJZPtGBGJgBDmwqffW4Dip7+F/eAGlQtZrywg5
      hFIKZw2NaJlmZY7+4RG8Q6cfyMwthIBeEM51Dre2jMiXd8z+rrZKbXYOWsXkideH11yk6Q9k
      xK5dnoNK64g0wgqJthFJONKa+TdnPDKJ8bYLlMmOg4zXMcHAtuM2UoY6rZKE/SDaXdUtbttq
      s724RNgEL1rGCUVtISX95/+P8lt/RG5sjLXr8yBM6/oSZSLGj4whDxyF8cM79EzvG0Kgnz6P
      vfEPGBNsNdpyEe/Q3rWZHtAdbTvpybOkY1MkM9dJboNZmMGLHGsOmn4RTYoansTZts/8xRsY
      2YVp5NAEKP3gHvQ9IlNB7l7QL4v9FAaLcO0SIEjCIYxXQJB2SvhaZ8n+cgYvWsUonzTIimJk
      s4JzJpObTxvIFi3ACo0TAqvC1grhQEiUa2Jc1IkBdtyvs2S1e2bjuneqpnIOJyRp0JeVpziH
      rRn4wd9TnGytvtaQKyhyo2OUT57G9I08lCSFCPIwOgIzq8BGLXq6Xt/zOZzbgyrE/d2dQPYN
      Qd8Q+adewEUNau//hOb0QvY7F2exwF0GqnMOb/oKSbGMtQahPWR5kA2N0Ux/0qUJ+Dm6ykz3
      ErTCSg+LRDWXsSrEszHWyyGczfL4LZ6wF68R++WWOG2GxC/jRZVswhCSpFX8Iq1B4PDSBqlX
      AERWG6s8wsYsjfzkzhXGWYRNNv+g+z3bFG0apF4J3ZIw31zwapRPs1HDv3aJ4dPP441MEEwe
      yT5K6y0lMTiLSyKiyx8RnDqPfAAdfdTUIcztD3Bi4xnpvt0D3p3fzT4kA9gGEeQovPq78LN/
      on7jOrqvdEf6tKuvo25fo7i0THLzU+y551n/9ALywHHy518Dk+JMiqtXkaUBUBqZK4IxjzwT
      dCcET72Inb7IeiJJwn6sChA2c0mEiVBpHaPzSBthpAdSIdNG5ke3RDidUBgvn7FGW7BSIxCk
      ftuVASc0wpgsM+JMa5Bs5sWIDiFvezeVzfCSKlgLOtPydDrMBnXrVA6LNk1S6SifOgthAWdS
      krmbuFqVdHWF2vQtBl/7Onr0ILlzX39gz1NNHkEOfI6pNGjLNKqRvUvquGbtyzEAyPz0/iPH
      +dP5GWwU8Yv5mzRaqdEtXSmt4eDPf8TkuuRWY4HZ/oD1Tz4hMXm4Oo1d+FuMceSnxkkX5ogr
      K5T6fZyXQ7/151/W17kvyMFxCn/+r3Hv/Asr03MIE3cGlRM5/OYSKm2ATUm8EjJt4ic1jF8A
      6/DiFZq5UaxUuLRdWZVhB03FOVRSx0gfaWPMtphEJ+sY6aNNk0RIVFzNSGJSg7PoVpshKzRO
      K4LGAnE4vHUvoYXIL2PiKvEP/hEV+MQrK6RkhfwOgWrV+T7oTJ1QCnX4MKZyAecEUhp2k9zv
      fgKxlQz3sGGLfcwNlMit1yh/9j4rgU9QrXDgNz+mPHed9fIg5fmbHLi5gC89pqMKScEj8D3W
      m9kN28ThUke8vEYaWZwMiKMsHeofO921UqhXIIRASIV/4Biicpt4dQWBy2boVvFGEgxgvALK
      ZRqWykYYv5zN8jYFa5AmwrSK0tvYUD3ODEOlNVyr9VGqc51jVVJHpzWQHtbLIdMmwsYkQT8q
      raFME2ljUp3PMlpeHis10jQzQxR0dvOdc0iZuWNOSGhWiWKHER5s6sYSFjSF868+nGeaK5Bc
      +hQJ6IOjJLeuIIt9yOLdm+0J7X+5BoCQJKVBZodGaK4vc37xFudnrvLrZ1/FLNzm+Ce/pDhT
      oyDz4KCsQi7UaqzGPlJsk3DcpArhhMAlMcHl32Y7fuW9N+F+FBBCID2ftZu3cErjN5dBKHRa
      zwJjIbOZWGZygVaH2aCzCc5l/r71CtvOuWmCtQbVHrAuMyKBRcVVhBCYoNyhPjihUKaJUx5W
      57JZXwWZwaisUN5vLmc70JuEgJ0DKeXGzrZUWKFbwXkdldYzF07A8Kuv7WlA3tez1B4i5yPz
      Ad65l0guXICledSxU3dProi9MpgeMER5kPU3/5SfnX2Dfz70FI2BMSrPv0VFDNKnillfJ8BX
      HhMmZTRZx9/EYHTb/gPApIzGISPvvIdevPEovtY9QY8dYOTUUfIiJsqPIk0z08LfbOQm2SHt
      sZ37sgXOoKNVdLpO6rWJbbZlOA4T9GUrx+aPKI8kGEAltWyF6YLUz5SfN3N+unYQlQrjFzNX
      SgiMkBRHSsix7mJg9wvn3JZiIe/IKbxzL2cJA88nXU8xC7f3dK5Hky9sQY4dYnXsUOd1rk9O
      wWy7YV8245/JTaK1ZjleZzZeY90mzAd9O3b9Bx3k/TLGJQz+9H3WD1/D+UWsFNhjJ0n83dmG
      jwJCKvLn3yA88Szipz+ktgZ+tJrRIGR7pm1JjDkQGHQuR35qCq9vAIukfu0q62uNFp3BouN1
      Ur8INu2cQ6ZN0qDvzv63EKR+CR2tkQblHVwkpzxSUcSL1zOlBtp8pm2pW8goCEl2nMSSO33m
      4XC1tp2zrROlDx/BNJqo4b1VKT5SA9gOt1maUYA1aeZjAoN+kQGvyK8at7MX0Hn2GZel6hKa
      9RnC/ARJvMLTVxcoqhp1v86Zrxs+iA7z4fpQu8dIz0AW+xn61nfxf/NLGpdrqLRBbuogQV8Z
      qT3iW1dxQYn8qWfQYwe2pI79oVEaP/w+mARlmqQql+3lbm5wsWWj1KGSdUBkK4Gz2czfMjTn
      HDpew3iFLPGkvM5qI22KNjE2bWS71LQGXTtDZRO0aeDI6ndBUJ4aQ48deuDPrHPdLgjOvHBP
      5+opA0hcukG5tlkWWchNcuoC8p30G5Sai/QJj2GhOB0MsZI2mHMGZRMKqiUqZQTSRrzkXaTy
      459w/fU/QfRYbYHwQ8ovf5Ni6+XJTeSt8NlXdv/c0ARjb30rU5Jw0PjwF1RWtxLpnPIRNkWY
      OHOFVKa7r+O1bEfaL2yZ8YVNkSZGOItOapkRWIN0hiQ3gk7ruHgNK1QrgLdgE4zOt/YxAOco
      9ecovfT1h8bUzbrOfPH32DsGMHuTsaUqdJonuM7svxk+tjNjxdLntWCAUitInDNNpFA4v5+5
      aIVASGIdU6/1s/TRGocrjuv1NSjtVE/rBcg7sBa7QQiBbqWSbWOd0td+l+r3/pZUeAgyEqGR
      AV5czXoLSI2VPk4qkqB7UOqkxkgNDnSzgtF5QEJaB5u2Vg4HrkWpME1Sr7BRT+AgVwrpe/P3
      t7B9HzgeAHsAttMMHxGcMYy+83PGI9UJbDOfbuOYSnOJ1cY8AzZFJesIHDkcaYvrDjCgPKJ4
      BRtXsGmdwKUcEEXm/noZ7zNBPz6jv/jRV6PEchNc1ECEBeT6Esqk5KNVCi4lqM3jpevg2gPX
      YLv0/+oOCzLbLEOAVX5Wxkkr3dTS6W+zUjMGkmXg8ARD3/oO8mGrdj8g+ZyHtgI4Y3BR/a6z
      moub8MP/RCUyXEtnKcuA/rB/x9JZjdc4nRumGA6Qiyo00jqn8+N4m/L+g16B52RMKEtdl16L
      xa3chrgJuS++Fd8LaNdjCyFoztzEE0BQBp3Dc44Ygb2PrjteXM2qzLKzo5I61i+zG2VCOsPI
      iy8QHNu7QMIXgnowtJeHZgDx+/+MyBXQR89kRrBbkcjcNF5DgiqwIAIWcai1yxzNjdLvb2hc
      9nmFjqtzPNyd+Zm7wwxXNU2KqaP/+3/P7PFDNMpjpCOTWxpOP3ZQClC4NCVZrWUll+39Eelt
      KM11iG97g3AgXUpiJFWjGSKTzunWF1kKx/DzX97gd9ZCmsDdehrsAQ/NALxnXsn8RCHvmIIz
      ly7hIbGtVppgGQoGMMBKtErZz/RFrdDENiX4ApZfVjmeKx6mmjY5F/vZAAASx0lEQVQY/+wm
      JbnAtHuHT6dGiV/61mNTWtlGm5YglMKZlDR1G8/aRKBzqMYSVodZAzl/bzGGMAnapdBcpir6
      ERiMdKi4imtleNqwKmTgxDHC41/SzE/Gun0Qgx8eogHIwu4KxZthykWS+UtI3YdLq4xKj4lw
      GIBKc5m55iIAcbKOH9xbkLgd7QFe0hsz/jFKBDduc63yH5ADYyz1lcAPSIcnEHusVX1UEEJ0
      1DKE0uSfe4nqz3+Ka6wQW4MEUq+IShqYLvpDu8FL1sHZjJDn5fEFWfBsLTpeQygfqzMGa9+J
      o+TPfe0hfsuHi0eaBXLO4gmQMkREFZ7Jj+Jt2vkcaLk6i80FfMFDm6GHdYmppoaZtewPsMyn
      /Pr4UdaeeW7Ldds7kPfdFf4hQo9NUXz5FdZ+/J+z2V5mAgYyrZHKvbt5VgXE0scJSahS2h0p
      rZDEfhkvqSKMwi+E5M+/dl/PwnVW/EeLR3oHbn2NI9dn6XMpo14OX23tUhiZJvXGLONCcDQc
      emj3EUqvQ/Bq/xkSAd+8PM3Yez9D3ry8oVe6hXTTWxBC4E8dofjqWwSNeXSzgt9YJPGKuHu4
      ZysU0iUYb7PRuM5XT70SzsYUDx24L/Khi5tQ36kA/SjwSFcAkS/iAp+jqpxx3bcFWEm0wlP5
      Bz/w27ubu0m/t6GF5LXbKyS3lvjFwTmWX3i99+MEIQimjuIFPsYqrFTZbq/yMV0aYHSDVT7O
      7q72h4DQV6jSzmzd3eCsyfYHeqS/2yNdAYTSXH/tdVZUtgO8eTzWkxqD+uEWt9yRWNY+Rgh8
      qRmfX3yo9/IgIfyAwjMvkXplUr+MCcqtHH4W4PrNZXTLz+9+ApFRKtqdGrvUHdSdR3ofItTt
      Wmln0p4QOnv0TtjAMDfOnSZx6ZbZxDpD4R7Emh42vAe4eeaixgM7124onXqGvNzYLLIqxG+u
      4MVrpH4foFBml1nepjgHXrTWmZQcrkVRyf62TkB1+f4H8X20gHoYePQGAMQHjjHd50OLkOWc
      o+CVuBatklpDas2WB529gPvTwN9Dv8UdcA5uTYzf/cC93sOXsO8Qucz9acPpgDTsJ80NZdx9
      6XVm+C1wjlxaJ/TzeF6eXLKGThuIdqOUTjIi6wncdcOxttp5j7uhV7p89oQBCCFYPn2S2CZZ
      MUirRDIXDvNxs8K767dIXGYElaTOe80Kv1yf/dLu72JRsvDsvbEMHzmCHCJ3Bwq4VF35/1nf
      LpXJsXt5ZDhIaGL8xlKWC2rxtBCCxs2rmNWlHecQfg7Mxrmdcziz9VrOOVwPdAPqCQMAcOOH
      mCu01M1ajFBP+gzlJxjIjfFhbYFf1ua44AQuGMJs0sPcK+5n9r+YE3zy+jfu3km9xyCkIj9+
      B6EwkYkJes0KYX0eldQypQiXkQ03wwmF0Tm8uIpKm+i0gR+t0lxZw8xlxUe2sd4Z5MLzs0qt
      1gwvhOiuAPKA6AxfBD1jAEIIls89S+QipFQbamnOkdcFRosHMSrE9woIIfD8Pj5rLDMfVx9K
      MOWco2KafHL+eXjYxK6HAGcNprp6x2NSvx/rFdF+kVBqCkmNXFLFmRgRbfqsy+jQQudRSKTw
      sH4fLujDpW2qhcPcupxJ1LQ/FjVofPJu12u3082PGj1jAADp6AGWxgtZsbVQtBuhtSXZN/v9
      WgWsByNckSEfNJe52ljEbPNp72fGb6PhUt5+5ih26NHKLd4vGp+8z+rs8h2PyTWXCE0zK3Dx
      ChAOIMMhkC2tV0A4hxEyqxkQWSzh1EajbdsyAJkvoQ+d7shdOmsxF37F6icfYauVh/dFvyB6
      ygAQUBkc6wz0bJaQSKGwNusovv14rQJMMMxCMMyNZqWT2uzIt2/7917RwOAOnOiJWepe4Zyj
      fv0qiDt3UpTKh3Bgaw8yIRDBAAQDiKSGi1ayYhosIqnvSJ2aZveGhnbpNvOfXiR2GrOyM07o
      FfSWAQCNE09x+cgQDRthre0ExLFLcEJvuEab9SpF9pqjB9gd0UfCHVo/PUy4L9IrGHBry6TN
      Pfbz3YYsBjPIxgKJMcRemTQcRjhHKv2WHGP7Qg6Z31Zkn8Skt69Q+cn3SVUO7RLipfkv9H0e
      JnqnIqwFISTV8y/zyeQthj76mImVhEB5LY5QraUcuJOSK4RkEc1P12c5G/ZR1l8s1Whwj650
      0pgvpG8Uz06T2A290d1WAYtoNWLf9HubIqNVbDCAl9ax8RqpCkFq/HSdtE1JcY5cOUfuqec2
      bnt5juWf/IC4mWBkgBPZ5BUe2btY7ZeNnjOADkanWPzWJJVbVzj17qfUoiUCf2Pr3dpMLnwj
      Lw1hbghrDdfjZc5+QQNYlQYeERv0i8o7aq2ZSiOEVFTTRvsxIYSg2pIrsUKRWEOhsYgSgliH
      GJEJYNlcNsid8hGAaiyRBn1IoUBIglBROHqM8NS5LRL39UsXaETApg3McHgk6+bTo+hdAyB7
      YWbqGBcRfOOXP+CzdA0RDG8okrGTzyOlooIisSneXvtebYMDrh06+Fj6/wBydIpS4Rq+k2wf
      esamWJtga7cYC/qwQlJUIdeiCteVwPrbaoU3SSFaFeDnAwa//R1kl8084W8zXAeqtLNRSC+h
      pw0AMiNIRyboC3OM1psssiHK5FqCsalJiONVZKubTMElePL+C98TZ1kbeHjs04cNWeqnfnQc
      //ICG/oxGZTUSCHpCwaYym8IyXpSMxct042k4UTGCyqOD1P82lvIXfZEgqFhuHiVTorIGXKT
      O1tjdc7batq3nRbtosaXVqXXc0FwV/ghDSFQAnYoYgFpUmUiHGE8P8ZYOEK4SS9+J9oOwe64
      VFSkU0e/6F0/UtgTTxGJve+0FnWet4IRSvG2vQMbYZWHFpa+M2d3HfwAabVK+9k65/B9hb6D
      QJWrVnBrO1O1D1VNYhseCwMQQiB8zZkwpBlXSU1EaiOsM6Smme1ebtp1bGeL7icLEtuUq0+f
      7jntoHtGmKd27AC4nd/DtLo27viIDjili+TaTFHnstSnDEmcJrpxedfL2fUVVj69sCWgLoyN
      7RrPOGuQ5UFk3/DOX36JrudjYQAujvBiQ5/yEUmFk3aRl1mk1LjKW2qFUZFsGexG5/htc43P
      Gtvzz21J8a0v3zjLWtpgOa3z3niZeGT3ZftxgRACnj5LU7akTDYhF1UY30VYYNQrMuUE40lE
      X2ORROVaRUCwOj2z6/VMdZV0U/ZW4MhN7f4ceyUu6PkYAEAszzKJQgnFN/MeOakoK8VBP0Ap
      zSs65ef1OYzqI9A58l4J4QmqzQVWkjr9HUHYbRwX51hIanw0MUjlyDOIXCnr7tjrnWb2CKE9
      EgGhaxt+Bl96W0pP26ilDa6kdWRujDKQS4ssxyutbJBA6d0HrTd2kKJOqZrsGF+k6IkjD/gb
      PXg8HgbgHFIIFpIGsXWM+wHGxMiWm1JUmm8XHTPREhciD6sH8FVA3h/kYrTAizq3pfu6w5E6
      y/sjJW4//y3wfNQj6iv20FHMw9pWJuZ2yghAPW0yndYQ3kbqV6uQnLPUAOFSgqnju17GCUHq
      56Fhsj2C8dHeb1nFY2IA2hoEUEmanMgNYEl2yCZKIZgK84wFlnert2nIIyipEDamZhoUdR6y
      Oiecc7w70c/sS1/vicLsh4l0ZACxttTqDplhLqkylWYu0NVomSEVsGgibLi1oZ2xEc4mFEbK
      FJ45f0fFZSEEA69+E/3x+wT9A4THH5Iq9APGY2EAheoqWkhki4veDnBll8ErEVRFAU8IrLNM
      eVBLVim2NsZcS05x+eDBr/zgB3DFIrjFrWGA0FTi1WxTLBxhzhmE19cpdGl9kka8SohDjE+i
      Rybvei09NMbAN77zML7GQ0PPG4BzjvGVZQSwniYkptlyZ1zXGWY9TegXCdXoNmWRUBIC6/Wx
      EQCDFJKoUX88MgBfEG50kkhexLeqsyegVMicDtEq3yIcaramh1sNSnSekoNm+eF0d+kF9P4Y
      cJaJ6jI3mmscCwtIIZBSInfJIvR5Pq8UC7xVDBBO4OsxSrqwMQE6WHUxYg8z2lcBMl+kdvYU
      1eZt4qROkjaRUuHpwrYJJMuOGRsTJVmTksAroQpl5OjjnxXbDb1vAFGD4WaddROTawW9W/P7
      gq2zV9a/6tN6g+FgvEWH2GilFGN49/zZnld9e5BwR05gDx0DDM4Z8mGX3DvZ/sDN5gI30zWM
      ibEqofn664+s8fiXgZ43ANGsk1eKtKXIJqW8QzVR9rOb0RqRbGI3t8VFgBN8XAppHD71Jdx5
      70AIQXzwIEoV8L07qGI7B84whERKydrxQzD84MQAehE9bwC2tkbTpIz5G9yQzuB3LXUCJJuj
      PKcifn/SIf3LrCSVThefaSQ3z53/cr9Aj0BNHaVxF0V4pXwO5iboD8dolH3syWe+nJt7hOh5
      AxClAWomJXG2K7Vhc+VXW1Yl9AxSCF4Z8nhlbIkVs8AClg9eew43tPdO4l8lCClJjh7Z0umx
      G6RQRAVB87XXEQ9ZmKwX0PsGENWZ9HNUkmxLf0ev4C1wmaFs2vUseYpisMpHB8ewI3vrHPiV
      hHPo6ip3euXOQaMsqb/x5p0lVb5C6PnoZqQyTygVnpTbxnu3Ol9Bw1q8UGCcQ7U+cLM8xOpz
      L/SEEtkjgxDEk5Ok12bQMo+xMUkgsVpCmmKKOdKJcTj29FeGCrIX9LYBOMex+Wka1uAhd6Tt
      XGtntw2BoKg8fiQm+H5piqnGIhL45Pw3e4Z89SghRg6y9iowOw+HDyH6hkBpsAah9BM5QfS0
      AXhrizxdW6NmDOWWP9oukt8NWkheaxj+z8GDzI+/8WXd6mMBoRRi8ghMHtn6i69wmvNu6N0Y
      wDmGrn5MWWhuRzX6u/LKHd0KX0IhOXblQk+oD98JvX5/TwJ61gBcbY0XZ64DrqVGJrrk/7Pd
      S7fNEBIc82NTX/Yt3xucw/VIk4gnGT279jkhEDITylV3bI+UEeMEAgMsmoT3R8dYOfpMb7MR
      hdhzH7V9PDz0rAGIfJFV5bHabOKJOwewP02q3Dz6LCuFPpLRSUSx/4kM6PZx7+hZA6C+zmCS
      spg0ORzeeaZcHZxg8exrwN3K3XsTzqRfab5NL6NnY4BgcYbxFrFNd+lCuGJTfoNhOk1YLd2/
      BMo+nmz07LST2pR3owpJFHMiv5O5WXeWt9/4k6yZQ774WM78bezP/o8OPbsCFJdn+TBfJLLd
      uSuDQjHy9l8hl2Z6O9jdR0+jJw3AWYNr1Ml7RY7kil3z5U2gdvw57MThL/8G9/GVQU8aANay
      6HvkncW67hpv15Sk+fTXEN7j1bpoH72FnjQAV69iL36Amb/Ciom50Vzf8vtVk3Jt4MmkNe/j
      waInoy+hPVwSM6SLHA4LlOTGLL9oU/6f86+TjB18rAPfffQGem4FcM4RfvYuZ4M8T+X6WEsT
      ipvouVdyedLJI08UZXcfDw89ZwA4R6M0SG5ghANBodMytY3nGg2Ovvc2YnXxEd7kPr4q6DkD
      EFJiTMLVxRluNGsE25pcBFLxnYU5wqUvr1H2Pr666LkYwFmL+ehn+NaghUSIrfx/4xz/NDJG
      4+CTpeywj4eDnlsBwOE7R5/ymIvqTARbm1T/Kp/n8xffgi/YR2sfjxdeyEXkxYPrAtpG7xmA
      ELggx7KJGdE55KZcT80aLo0feiI0PfexFb9p+NTtg8/79eBIEpiwSMMYrkZVFpOsL23qLH97
      9DSVU891/dR+ddVXGyZrB/rAz9tzMYAQAkYPkCxcZzzIUU0TRvwQ66BeKO86+7vKHOln7+Ln
      CqQjB1FTJ77kO9/H44geXAFAaJ9ms8H3KreYTep8XltlurnO4PWLu34mvf4pxWu/pfjR28ja
      6q7H7WMfm9FzKwCAPnkec+1jpirzxMLiB4qbpkm1Oodztusq4J17g8bJ89SbNeTQk6H8vI8v
      jt5cAfwQUR7iVtpkzkZMFx39QnNsfR1RXen+GaWRxX7k4MQ+PXofe0ZPGgCA/8ofkBQGqCUJ
      t5ZXiHKKUeXz0m9+ioibu35OdKke28c+dkPvjhY/RH37L1juH2NhrcblhUVm4jrn1lZ5/Wf/
      iL7yMbYyjzPp3c/1RbGfYPrKoidjAGg1xx4cx//D/5H4ve8zf/VDFhqrXBagwjDrJu4cfBl7
      Avse1VcW4n/7eMndiHtfN9NWK9iFacztK/gv/z4iyN39Q/vYx13QsyvAdsjSALI0gDryzJcz
      6+/jicBjYwBt7Ks87+NBYn8q3ccTjX0D2McTjX0D2McTjX0D2McTjX0D2McTjX0D2McTjX0D
      2McTjX0D2McTjX0D2McTjX0D2McTjX0D2McTjceOC3RXOJgKLNZB5GA53bfxfeyOr4wBKBxP
      5wyv9qWspYK/WtzvG7CPu0OP6gevtvUocDI0vFJOuRVJliLBId886lvax2OA/x8uTtMHhqao
      AAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
